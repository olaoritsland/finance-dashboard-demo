{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": ""
        },
        "azure_sql_server_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'azure_sql_server'",
            "defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=@{linkedService().datasourceprefix}.database.windows.net;Initial Catalog=@{linkedService().dbname};User ID=@{linkedService().sqlusername}"
        },
        "azure_key_vault_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://@{linkedService().keyvaultname}.vault.azure.net/"
        },
        "azure_blob_storage_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'azure_blob_storage'",
            "defaultValue": "DefaultEndpointsProtocol=https;AccountName=@{linkedService().accountname};"
        },
        "sqlServerName": {
            "type": "string",
            "defaultValue": ""
        },
        "sqlDbName": {
            "type": "string",
            "defaultValue": ""
        },
        "blobAccountName": {
            "type": "string",
            "defaultValue": ""
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": ""
        },
        "functionAppName": {
            "type": "string",
            "defaultValue": ""
        },
        "sqlDbUid": {
            "type": "string",
            "defaultValue": ""
        },
        "sqlDbPwdUri": {
            "type": "string",
            "defaultValue": ""
        },
        "apiKey24SoUri": {
            "type": "string",
            "defaultValue": ""
        },
        "apiPwd24SoUri": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/azure_key_vault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "AzureKeyVault",
                "parameters": {
                    "keyvaultname": {
                        "type": "string",
                        "defaultValue": "[parameters('keyVaultName')]"
                    }
                },
                "annotations": [],
                "typeProperties": {
                    "baseUrl": "[parameters('azure_key_vault_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/azure_sql_server')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "parameters": {
                    "datasourceprefix": {
                        "type": "string",
                        "defaultValue": "[parameters('sqlServerName')]"
                    },
                    "sqlusername": {
                        "type": "string",
                        "defaultValue": "[parameters('sqlDbUid')]"
                    },
                    "secretname": {
                        "type": "string",
                        "defaultValue": "[parameters('sqlServerName')]"
                    },
                    "dbname": {
                        "type": "string",
                        "defaultValue": "[parameters('sqlDbName')]"
                    }
                },
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": "[parameters('azure_sql_server_connectionString')]",
                    "password": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "azure_key_vault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": {
                            "value": "@{linkedService().secretname}",
                            "type": "Expression"
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_key_vault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/azure_blob_storage')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "AzureBlobStorage",
                "parameters": {
                    "accountname": {
                        "type": "string",
                        "defaultValue": "[parameters('blobAccountName')]"
                    },
                    "secretname": {
                        "type": "string",
                        "defaultValue": "[parameters('blobAccountName')]"
                    }
                },
                "annotations": [],
                "typeProperties": {
                    "connectionString": "[parameters('azure_blob_storage_connectionString')]",
                    "accountKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "azure_key_vault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "@{linkedService().secretname}"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_key_vault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/azure_function')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "AzureFunction",
                "annotations": [],
                "parameters": {
                    "functionappname": {
                        "type": "string",
                        "defaultValue": "[parameters('functionAppName')]"
                    },
                    "secretname": {
                        "type": "string",
                        "defaultValue": "[parameters('functionAppName')]"
                    }
                },
                "typeProperties": {
                    "functionAppUrl": "https://@{linkedService().functionappname}.azurewebsites.net",
                    "functionKey": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "azure_key_vault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "@{linkedService().secretname}"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_key_vault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_D_KUNDE')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Skal utvides med data fra enhetsregisteret og næringskoder for å match kilden",
                "folder": {
                    "name": "2 Core"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ST_24SO_COMPANY",
                                "type": "DatasetReference"
                            },
                            "name": "Source24SOCompanyST"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "D_KUNDE",
                                "type": "DatasetReference"
                            },
                            "name": "SinkDKunde"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "Window1"
                        },
                        {
                            "name": "DerivedColumn1"
                        },
                        {
                            "name": "FilterOnCompany"
                        },
                        {
                            "name": "Rename"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_D_KUNDE'),\n\tLASTELOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tClientName as string,\n\t\tId as integer,\n\t\tExternalId as string,\n\t\tOrganizationNumber as string,\n\t\tName as string,\n\t\tFirstName as string,\n\t\tNickName as string,\n\t\tPostStreet as string,\n\t\tPostState as string,\n\t\tPostPostalCode as string,\n\t\tPostPostalArea as string,\n\t\tPostName as string,\n\t\tPostCity as string,\n\t\tPostCountry as string,\n\t\tDeliveryStreet as string,\n\t\tDeliveryState as string,\n\t\tDeliveryPostalCode as string,\n\t\tDeliveryPostalArea as string,\n\t\tDeliveryName as string,\n\t\tDeliveryCity as string,\n\t\tDeliveryCountry as string,\n\t\tVisitStreet as string,\n\t\tVisitState as string,\n\t\tVisitPostalCode as string,\n\t\tVisitPostalArea as string,\n\t\tVisitName as string,\n\t\tVisitCity as string,\n\t\tVisitCountry as string,\n\t\tInvoiceStreet as string,\n\t\tInvoiceState as string,\n\t\tInvoicePostalCode as string,\n\t\tInvoicePostalArea as string,\n\t\tInvoiceName as string,\n\t\tInvoiceCity as string,\n\t\tInvoiceCountry as string,\n\t\tPhoneNumberHomeDescription as string,\n\t\tPhoneNumberHomeValue as string,\n\t\tPhoneNumberFaxDescription as string,\n\t\tPhoneNumberFaxValue as string,\n\t\tPhoneNumberMobileDescription as string,\n\t\tPhoneNumberMobileValue as string,\n\t\tPhoneNumberPrimaryDescription as string,\n\t\tPhoneNumberPrimaryValue as string,\n\t\tPhoneNumberWorkDescription as string,\n\t\tPhoneNumberWorkValue as string,\n\t\tEmailAddressHomeDescription as string,\n\t\tEmailAddressHomeName as string,\n\t\tEmailAddressHomeValue as string,\n\t\tEmailAddressInvoiceDescription as string,\n\t\tEmailAddressInvoiceName as string,\n\t\tEmailAddressInvoiceValue as string,\n\t\tEmailAddressPrimaryDescription as string,\n\t\tEmailAddressPrimaryName as string,\n\t\tEmailAddressPrimaryValue as string,\n\t\tEmailAddressWorkDescription as string,\n\t\tEmailAddressWorkName as string,\n\t\tEmailAddressWorkValue as string,\n\t\tEmailAddressAlternativeDescription as string,\n\t\tEmailAddressAlternativeName as string,\n\t\tEmailAddressAlternativeValue as string,\n\t\tUrl as string,\n\t\tCountry as string,\n\t\tNote as string,\n\t\tInvoiceLanguage as string,\n\t\tType as string,\n\t\tUsername as string,\n\t\tPassword as string,\n\t\tIncorporationDate as timestamp,\n\t\tDateCreated as timestamp,\n\t\tStatus as integer,\n\t\tPriceList as integer,\n\t\tOwner as integer,\n\t\tBankAccountNo as string,\n\t\tTermsOfDeliveryId as integer,\n\t\tAccountDebit as integer,\n\t\tAccountCredit as integer,\n\t\tDiscount as double,\n\t\tTypeGroup as integer,\n\t\tShareCapital as double,\n\t\tNumberOfEmployees as integer,\n\t\tTurnover as double,\n\t\tProfit as double,\n\t\tIndustryId as integer,\n\t\tMemberNo as integer,\n\t\tDateChanged as timestamp,\n\t\tBlockInvoice as string,\n\t\tDistributionMethod as string,\n\t\tCurrencyId as string,\n\t\tPaymentTime as integer,\n\t\tGlnNumber as string,\n\t\tFactoring as string,\n\t\tLedgerCustomerAccount as integer,\n\t\tLedgerSupplierAccount as integer,\n\t\tVatNumber as string,\n\t\tPrivate as string,\n\t\tFKLasteloggInsertID as string,\n\t\tFKLasteloggUpdateID as string,\n\t\tJobbInsertNavn as string,\n\t\tJobbUpdateNavn as string,\n\t\tRadInsertTS as timestamp,\n\t\tRadUpdateTS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Source24SOCompanyST\nDerivedColumn1 window(over(Id),\n\tasc(ClientName, true),\n\trank = rowNumber()) ~> Window1\nSource24SOCompanyST derive(lastedato = RadInsertTS,\n\t\tbk_kunde_id = concat(toString(Id), '-24SO'),\n\t\torganisasjon_nummer = replace(OrganizationNumber, ' ', ''),\n\t\tkildessystem = '24SO',\n\t\tjuridisk_kjoenn = case(isNull(OrganizationNumber), 'U', 'J')) ~> DerivedColumn1\nWindow1 filter(rank == 1) ~> FilterOnCompany\nFilterOnCompany select(mapColumn(\n\t\tbk_kunde_id,\n\t\torganisasjon_nummer,\n\t\tExternalId,\n\t\tNavn = Name,\n\t\tadresse = PostStreet,\n\t\tpostnummer = PostPostalCode,\n\t\tpoststed = PostPostalArea,\n\t\tland = PostCountry,\n\t\ttype = Type,\n\t\tkilde_opprettet_ts = DateCreated,\n\t\tkilde_oppdatert_ts = DateChanged,\n\t\tfk_lastelogg_insert_id = FKLasteloggInsertID,\n\t\tfk_lastelogg_update_id = FKLasteloggUpdateID,\n\t\tjobb_insert_navn = JobbInsertNavn,\n\t\tjobb_update_navn = JobbUpdateNavn,\n\t\trad_insert_ts = RadInsertTS,\n\t\trad_update_ts = RadUpdateTS,\n\t\tkildesystem = kildessystem\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Rename\nRename sink(input(\n\t\tPK_KUNDE_ID as integer,\n\t\tBK_KUNDE_ID as string,\n\t\tRK_KUNDE_ID as integer,\n\t\tNAVN as string,\n\t\tKILDESYSTEM as string,\n\t\tKLIENT_NUMMER as integer,\n\t\tJURIDISK_KJOENN as string,\n\t\tORGANISASJON_NUMMER as string,\n\t\tORGANISASJON_NAVN as string,\n\t\tTYPE as string,\n\t\tNAERING as string,\n\t\tTOTALKUNDE as string,\n\t\tSTART_DATO as timestamp,\n\t\tSLUTT_DATO as timestamp,\n\t\tADRESSE as string,\n\t\tPOSTNUMMER as string,\n\t\tPOSTNUMMER_LAT as double,\n\t\tPOSTNUMMER_LONG as double,\n\t\tPOSTSTED as string,\n\t\tKOMMUNE as string,\n\t\tFYLKE as string,\n\t\tLAND as string,\n\t\tKILDE_OPPRETTET_TS as timestamp,\n\t\tKILDE_OPPDATERT_TS as timestamp,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDKunde"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ST_24SO_COMPANY')]",
                "[concat(variables('factoryId'), '/datasets/D_KUNDE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_D_DATO')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "2 Core"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ST_DATO",
                                "type": "DatasetReference"
                            },
                            "name": "SourceManDatoST"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "D_DATO",
                                "type": "DatasetReference"
                            },
                            "name": "SinkDDato"
                        },
                        {
                            "dataset": {
                                "referenceName": "D_PERIODE",
                                "type": "DatasetReference"
                            },
                            "name": "SinkDPeriode"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "FilterFirstDayInMonth"
                        },
                        {
                            "name": "RenameColumns"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_D_DATO'),\n\tLASTELOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tDATO_ID as integer,\n\t\tDATO as date,\n\t\tDAG_I_UKE as integer,\n\t\tDAG_NUMMER_I_MAANED as integer,\n\t\tDAG_NUMMER_TOTAL as integer,\n\t\tDAG_NAVN as string,\n\t\tDAG_NAVN_KORT as string,\n\t\tUKEDAG_FLAGG as boolean,\n\t\tUKE_NUMMER_I_AAR as integer,\n\t\tUKE_NUMMER_TOTAL as integer,\n\t\tFOERSTE_DATO_UKE as date,\n\t\tFOERSTE_DATO_UKE_ID as integer,\n\t\tMAANED as integer,\n\t\tMAANED_NUMMER_TOTAL as integer,\n\t\tMAANED_NAVN as string,\n\t\tMAANED_NAVN_KORT as string,\n\t\tKVARTAL as integer,\n\t\tAAR as integer,\n\t\tAAR_MAANED as integer,\n\t\tFISKAL_MAANED as integer,\n\t\tFISKAL_KVARTAL as integer,\n\t\tFISKAL_AAR as integer,\n\t\tMAANED_SLUTT_FLAGG as boolean,\n\t\tDATO_FORRIGE_AAR as date,\n\t\tFK_LASTELOGG_INSERT_ID as string,\n\t\tFK_LASTELOGG_UPDATE_ID as string,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceManDatoST\nSourceManDatoST filter(DAG_NUMMER_I_MAANED == 1) ~> FilterFirstDayInMonth\nFilterFirstDayInMonth select(mapColumn(\n\t\tDATO_ID_FOERSTE = DATO_ID,\n\t\tMAANED,\n\t\tMAANED_NAVN,\n\t\tMAANED_NAVN_KORT,\n\t\tKVARTAL,\n\t\tREGNSK_AAR = AAR,\n\t\tD_PERIODE_ID = AAR_MAANED,\n\t\tFOERSTE_DATO_MAANED = DATO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumns\nSourceManDatoST sink(input(\n\t\tDATO_ID as integer,\n\t\tDATO as date,\n\t\tDAG_I_UKE as integer,\n\t\tDAG_NUMMER_I_MAANED as integer,\n\t\tDAG_NUMMER_TOTAL as integer,\n\t\tDAG_NAVN as string,\n\t\tDAG_NAVN_KORT as string,\n\t\tUKEDAG_FLAGG as boolean,\n\t\tUKE_NUMMER_I_AAR as integer,\n\t\tUKE_NUMMER_TOTAL as integer,\n\t\tFOERSTE_DATO_UKE as date,\n\t\tFOERSTE_DATO_UKE_ID as integer,\n\t\tMAANED as integer,\n\t\tMAANED_NUMMER_TOTAL as integer,\n\t\tMAANED_NAVN as string,\n\t\tMAANED_NAVN_KORT as string,\n\t\tKVARTAL as integer,\n\t\tAAR as integer,\n\t\tAAR_MAANED as integer,\n\t\tFISKAL_MAANED as integer,\n\t\tFISKAL_KVARTAL as integer,\n\t\tFISKAL_AAR as integer,\n\t\tMAANED_SLUTT_FLAGG as boolean,\n\t\tDATO_FORRIGE_AAR as date,\n\t\tFK_LASTELOGG_INSERT_ID as string,\n\t\tFK_LASTELOGG_UPDATE_ID as string,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDDato\nRenameColumns sink(input(\n\t\tD_PERIODE_ID as integer,\n\t\tDATO_ID_FOERSTE as integer,\n\t\tREGNSK_AAR as integer,\n\t\tKVARTAL as integer,\n\t\tMAANED as integer,\n\t\tMAANED_NAVN as string,\n\t\tMAANED_NAVN_KORT as string,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDPeriode"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ST_DATO')]",
                "[concat(variables('factoryId'), '/datasets/D_DATO')]",
                "[concat(variables('factoryId'), '/datasets/D_PERIODE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_B_KONTO_OPPSTILLING')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "1 Bridge"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "GRL_KONTO_OPPSTILLING",
                                "type": "DatasetReference"
                            },
                            "name": "SourceGRLKontoOppstilling"
                        },
                        {
                            "dataset": {
                                "referenceName": "D_KONTO",
                                "type": "DatasetReference"
                            },
                            "name": "SourceDKonto"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "B_KONTO_OPPSTILLING",
                                "type": "DatasetReference"
                            },
                            "name": "SinkBKontoOppstilling"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectKontoOppstilling"
                        },
                        {
                            "name": "LookupKontoKode"
                        },
                        {
                            "name": "SelectKonto"
                        },
                        {
                            "name": "SelectBKontoOppstilling"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_B_KONTO_OPPSTILLING'),\n\tLASTE_LOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tPK_KONTO_OPPSTILLING_ID as integer,\n\t\tKONTO_GRUPPE as string,\n\t\tKONTO_OPPSTILLING_KODE as integer,\n\t\tKONTO_OPPSTILLING_NAVN as string,\n\t\tKONTO_TYPE as string,\n\t\tMOR_KONTO_KODE as integer,\n\t\tKONTO_NIVAA as integer,\n\t\tKONTO_SUM_FLAGG as string,\n\t\tKILDE_OPPRETTET_TS as timestamp,\n\t\tKILDE_OPPDATERT_TS as timestamp,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceGRLKontoOppstilling\nsource(output(\n\t\tPK_KONTO_ID as integer,\n\t\tRK_KONTO_ID as integer,\n\t\tBK_KONTO_ID as string,\n\t\tKONTO_KODE as integer,\n\t\tKONTO_NAVN as string,\n\t\tKONTO_TYPE as string,\n\t\tKONTO_BESKR as string,\n\t\tKILDE_OPPRETTET_TS as timestamp,\n\t\tKILDE_OPPDATERT_TS as timestamp,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceDKonto\nSourceGRLKontoOppstilling select(mapColumn(\n\t\tPK_KONTO_OPPSTILLING_ID,\n\t\tKONTO_OPPSTILLING_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKontoOppstilling\nSelectKontoOppstilling, SelectKonto lookup(KONTO_OPPSTILLING_KODE == KONTO_KODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupKontoKode\nSourceDKonto select(mapColumn(\n\t\tPK_KONTO_ID,\n\t\tKONTO_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKonto\nLookupKontoKode select(mapColumn(\n\t\tFK_KONTO_OPPSTILLING_ID = PK_KONTO_OPPSTILLING_ID,\n\t\tFK_KONTO_ID = PK_KONTO_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBKontoOppstilling\nSelectBKontoOppstilling sink(input(\n\t\tFK_KONTO_ID as integer,\n\t\tFK_KONTO_OPPSTILLING_ID as integer,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkBKontoOppstilling"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/GRL_KONTO_OPPSTILLING')]",
                "[concat(variables('factoryId'), '/datasets/D_KONTO')]",
                "[concat(variables('factoryId'), '/datasets/B_KONTO_OPPSTILLING')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_F_OKONOMI')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "2 Core"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ST_24SO_TRANSACTION",
                                "type": "DatasetReference"
                            },
                            "name": "Source24SOTransactionST"
                        },
                        {
                            "dataset": {
                                "referenceName": "D_KONTO",
                                "type": "DatasetReference"
                            },
                            "name": "SourceDKonto"
                        },
                        {
                            "dataset": {
                                "referenceName": "D_PERIODE",
                                "type": "DatasetReference"
                            },
                            "name": "SourceDPeriode"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "F_OKONOMI",
                                "type": "DatasetReference"
                            },
                            "name": "SinkFOkonomi"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AddTimePeriod"
                        },
                        {
                            "name": "AggregatePeriod"
                        },
                        {
                            "name": "UnikeAar"
                        },
                        {
                            "name": "TransferToIB"
                        },
                        {
                            "name": "ZeroRows"
                        },
                        {
                            "name": "AddZeros"
                        },
                        {
                            "name": "TransWithIB"
                        },
                        {
                            "name": "BalWithZeros"
                        },
                        {
                            "name": "SelectZeros"
                        },
                        {
                            "name": "SumPerYear"
                        },
                        {
                            "name": "CalculateIB1"
                        },
                        {
                            "name": "CalculateIB2"
                        },
                        {
                            "name": "DerivedColumns",
                            "description": "Creating/updating the columns 'AccountNo, ClientName, DimensionDepartmentValue, DimensionProjectValue, DimensionEmployeeValue, DimensionProductValue, DimensionCustomerValue, raar, periode, Amount, sum_amount, beloep'\n\nMerk: beloep gjør ingenting slik den er satt opp nå, men det var slik den var satt opp i eksempelet"
                        },
                        {
                            "name": "Select2"
                        },
                        {
                            "name": "AddKeys"
                        },
                        {
                            "name": "SelectDKonto"
                        },
                        {
                            "name": "LookupKonto"
                        },
                        {
                            "name": "SelectColumns"
                        },
                        {
                            "name": "SelectDPeriode"
                        },
                        {
                            "name": "LookupPeriode"
                        },
                        {
                            "name": "FilterPeriode"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_F_OKONOMI'),\n\tLASTELOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tCLIENT_NAME as string,\n\t\tDATE as timestamp,\n\t\tACCOUNT_NO as integer,\n\t\tCURRENCY as string,\n\t\tCURRENCY_RATE as double,\n\t\tCURRENCY_UNIT as integer,\n\t\tAMOUNT as double,\n\t\tSTAMP_NO as integer,\n\t\tPERIOD as integer,\n\t\tTRANSACTION_TYPE_ID as integer,\n\t\tCOMMENT as string,\n\t\tTRANSACTION_NO as integer,\n\t\tVAT_CODE as integer,\n\t\tID as string,\n\t\tLINK_ID as integer,\n\t\tINVOICE_NO as string,\n\t\tSEQUENCE_NO as string,\n\t\tSYSTEM_TYPE as string,\n\t\tDUE_DATE as timestamp,\n\t\tPROJECT_NAME as string,\n\t\tPROJECT_PERCENT as double,\n\t\tPROJECT_VALUE as string,\n\t\tPROJECT_TYPE_ID as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tDEPARTMENT_VALUE as string,\n\t\tDEPARTMENT_PERCENT as double,\n\t\tDEPARTMENT_TYPE_ID as integer,\n\t\tEMPLOYEE_NAME as string,\n\t\tEMPLOYEE_VALUE as string,\n\t\tEMPLOYEE_PERCENT as double,\n\t\tEMPLOYEE_TYPE_ID as string,\n\t\tPRODUCT_NAME as string,\n\t\tPRODUCT_VALUE as string,\n\t\tPRODUCT_PERCENT as double,\n\t\tPRODUCT_TYPE_ID as integer,\n\t\tCUSTOMER_NAME as string,\n\t\tCUSTOMER_VALUE as string,\n\t\tCUSTOMER_PERCENT as double,\n\t\tCUSTOMER_TYPE_ID as integer,\n\t\tCUSTOMER_ORDER_SLIP_NAME as string,\n\t\tCUSTOMER_ORDER_SLIP_VALUE as string,\n\t\tCUSTOMER_ORDER_SLIP_PERCENT as double,\n\t\tCUSTOMER_ORDER_SLIP_TYPE_ID as integer,\n\t\tSUPPLIER_ORDER_SLIP_NAME as string,\n\t\tSUPPLIER_ORDER_SLIP_VALUE as string,\n\t\tSUPPLIER_ORDER_SLIP_PERCENT as double,\n\t\tSUPPLIER_ORDER_SLIP_TYPE_ID as integer,\n\t\tREGISTRATION_DATE as timestamp,\n\t\tDATE_CHANGED as timestamp,\n\t\tHIDDEN as string,\n\t\tOPEN as string,\n\t\tOCR as string,\n\t\tHAS_VAT_DIVIDEND as string,\n\t\tFK_LASTELOGG_INSERT_ID as string,\n\t\tFK_LASTELOGG_UPDATE_ID as string,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Source24SOTransactionST\nsource(output(\n\t\tPK_KONTO_ID as integer,\n\t\tRK_KONTO_ID as integer,\n\t\tBK_KONTO_ID as string,\n\t\tKONTO_KODE as integer,\n\t\tKONTO_NAVN as string,\n\t\tKONTO_TYPE as string,\n\t\tKONTO_BESKR as string,\n\t\tKILDE_OPPRETTET_TS as timestamp,\n\t\tKILDE_OPPDATERT_TS as timestamp,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceDKonto\nsource(output(\n\t\tD_PERIODE_ID as integer,\n\t\tDATO_ID_FOERSTE as integer,\n\t\tREGNSK_AAR as integer,\n\t\tKVARTAL as integer,\n\t\tMAANED as integer,\n\t\tMAANED_NAVN as string,\n\t\tMAANED_NAVN_KORT as string,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceDPeriode\nSource24SOTransactionST derive(raar = year(DATE),\n\t\tperiode = concat(toString(year(DATE)), right(\"0\"+toString(month(DATE)), 2))) ~> AddTimePeriod\nAddTimePeriod aggregate(groupBy(ACCOUNT_NO,\n\t\tCLIENT_NAME,\n\t\tDEPARTMENT_VALUE,\n\t\tPROJECT_VALUE,\n\t\tEMPLOYEE_VALUE,\n\t\tPRODUCT_VALUE,\n\t\tCUSTOMER_VALUE,\n\t\traar,\n\t\tperiode),\n\tSumAmount = sum(AMOUNT)) ~> AggregatePeriod\nAddTimePeriod aggregate(groupBy(raar),\n\ttemp = sum(1)) ~> UnikeAar\nAggregatePeriod filter(ACCOUNT_NO < 3000) ~> TransferToIB\nTransferToIB derive(SumAmount = 0.0) ~> ZeroRows\nUnikeAar, ZeroRows join(1 == 1,\n\tjoinType:'inner',\n\tbroadcast: 'both')~> AddZeros\nAggregatePeriod, CalculateIB2 union(byName: true)~> TransWithIB\nSelectZeros, TransferToIB union(byName: true)~> BalWithZeros\nAddZeros select(mapColumn(\n\t\traar = UnikeAar@raar,\n\t\tAccountNo = ACCOUNT_NO,\n\t\tClientName = ACCOUNT_NO,\n\t\tSumAmount\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectZeros\nBalWithZeros aggregate(groupBy(AccountNo,\n\t\tCLIENT_NAME,\n\t\traar),\n\tSumAmount = sum(SumAmount)) ~> SumPerYear\nSumPerYear derive(raar = raar+1,\n\t\tperiode = concat(toString(raar+1), '01')) ~> CalculateIB1\nCalculateIB1 window(over(AccountNo,\n\t\tCLIENT_NAME),\n\tasc(raar, true),\n\tSumAmount = sum(SumAmount)) ~> CalculateIB2\nTransWithIB derive(periode = toInteger(periode),\n\t\tbeloep = case(AccountNo > 2999, -1*SumAmount, SumAmount),\n\t\toriginal_beloep = 0.0,\n\t\tkort_avdeling = case(isNull(DEPARTMENT_VALUE), 'BE-0', concat('BE-', DEPARTMENT_VALUE))) ~> DerivedColumns\nDerivedColumns select(mapColumn(\n\t\tregn_konto = ACCOUNT_NO,\n\t\thovedbok_klient_navn = CLIENT_NAME,\n\t\tperiode,\n\t\traar,\n\t\tbeloep,\n\t\toriginal_beloep,\n\t\tkort_avdeling\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 derive(klient_nummer_kort_avdeling = concatWS('-', toString(hovedbok_klient_navn), kort_avdeling),\n\t\tselskap_kode_konto_kode = concatWS('-', toString(hovedbok_klient_navn), toString(regn_konto))) ~> AddKeys\nSourceDKonto select(mapColumn(\n\t\tPK_KONTO_ID,\n\t\tRK_KONTO_ID,\n\t\tBK_KONTO_ID,\n\t\tKONTO_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDKonto\nAddKeys, SelectDKonto lookup(selskap_kode_konto_kode == BK_KONTO_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupKonto\nFilterPeriode select(mapColumn(\n\t\tBELOP = beloep,\n\t\tFK_KONTO_ID = PK_KONTO_ID,\n\t\tFK_PERIODE_ID = D_PERIODE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nSourceDPeriode select(mapColumn(\n\t\tD_PERIODE_ID,\n\t\tREGNSK_AAR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDPeriode\nLookupKonto, SelectDPeriode lookup(periode == D_PERIODE_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupPeriode\nLookupPeriode filter(REGNSK_AAR > 1900) ~> FilterPeriode\nSelectColumns sink(input(\n\t\tFK_KONTO_ID as integer,\n\t\tFK_SELSKAP_ID as integer,\n\t\tFK_ORGANISASJON_ID as integer,\n\t\tFK_TJENESTE_ID as integer,\n\t\tFK_SCENARIO_ID as integer,\n\t\tFK_PERIODE_ID as integer,\n\t\tBELOP as double,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkFOkonomi"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ST_24SO_TRANSACTION')]",
                "[concat(variables('factoryId'), '/datasets/D_KONTO')]",
                "[concat(variables('factoryId'), '/datasets/D_PERIODE')]",
                "[concat(variables('factoryId'), '/datasets/F_OKONOMI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_B_KONTO_GRUPPE')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "1 Bridge"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "GRL_KONTO_GRUPPE",
                                "type": "DatasetReference"
                            },
                            "name": "SourceGRLKontoGruppe"
                        },
                        {
                            "dataset": {
                                "referenceName": "D_KONTO",
                                "type": "DatasetReference"
                            },
                            "name": "SourceDKonto"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "B_KONTO_GRUPPE",
                                "type": "DatasetReference"
                            },
                            "name": "SinkBKontoGruppe"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "SelectKontoGruppe"
                        },
                        {
                            "name": "LookupKontoKode"
                        },
                        {
                            "name": "SelectKonto"
                        },
                        {
                            "name": "SelectBKontoGruppe"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_B_KONTO_GRUPPE'),\n\tLASTE_LOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tPK_KONTO_GRUPPE_ID as integer,\n\t\tKONTO_GRUPPE as string,\n\t\tKONTO_GRUPPE_KODE_N as integer,\n\t\tKONTO_GRUPPE_NAVN_N as string,\n\t\tKONTO_GRUPPE_KODE_1 as integer,\n\t\tKONTO_GRUPPE_NAVN_1 as string,\n\t\tKONTO_GRUPPE_KODE_2 as integer,\n\t\tKONTO_GRUPPE_NAVN_2 as string,\n\t\tKONTO_GRUPPE_KODE_3 as integer,\n\t\tKONTO_GRUPPE_NAVN_3 as string,\n\t\tKONTO_GRUPPE_KODE_4 as integer,\n\t\tKONTO_GRUPPE_NAVN_4 as string,\n\t\tKONTO_GRUPPE_KODE_5 as integer,\n\t\tKONTO_GRUPPE_NAVN_5 as string,\n\t\tKONTO_GRUPPE_KODE_6 as integer,\n\t\tKONTO_GRUPPE_NAVN_6 as string,\n\t\tKONTO_GRUPPE_KODE_7 as integer,\n\t\tKONTO_GRUPPE_NAVN_7 as string,\n\t\tKONTO_GRUPPE_KODE_8 as integer,\n\t\tKONTO_GRUPPE_NAVN_8 as string,\n\t\tKONTO_GRUPPE_KODE_9 as integer,\n\t\tKONTO_GRUPPE_NAVN_9 as string,\n\t\tKONTO_GRUPPE_KODE_10 as integer,\n\t\tKONTO_GRUPPE_NAVN_10 as string,\n\t\tKONTO_GRUPPE_KODE_11 as integer,\n\t\tKONTO_GRUPPE_NAVN_11 as string,\n\t\tKONTO_GRUPPE_KODE_12 as integer,\n\t\tKONTO_GRUPPE_NAVN_12 as string,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceGRLKontoGruppe\nsource(output(\n\t\tPK_KONTO_ID as integer,\n\t\tRK_KONTO_ID as integer,\n\t\tBK_KONTO_ID as string,\n\t\tKONTO_KODE as integer,\n\t\tKONTO_NAVN as string,\n\t\tKONTO_TYPE as string,\n\t\tKONTO_BESKR as string,\n\t\tKILDE_OPPRETTET_TS as timestamp,\n\t\tKILDE_OPPDATERT_TS as timestamp,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceDKonto\nSourceGRLKontoGruppe select(mapColumn(\n\t\tPK_KONTO_GRUPPE_ID,\n\t\tKONTO_GRUPPE_KODE_4\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKontoGruppe\nSelectKontoGruppe, SelectKonto lookup(KONTO_GRUPPE_KODE_4 == KONTO_KODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupKontoKode\nSourceDKonto select(mapColumn(\n\t\tPK_KONTO_ID,\n\t\tKONTO_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKonto\nLookupKontoKode select(mapColumn(\n\t\tFK_KONTO_GRUPPE_ID = PK_KONTO_GRUPPE_ID,\n\t\tFK_KONTO_ID = PK_KONTO_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBKontoGruppe\nSelectBKontoGruppe sink(input(\n\t\tFK_KONTO_ID as integer,\n\t\tFK_KONTO_GRUPPE_ID as integer,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkBKontoGruppe"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/GRL_KONTO_GRUPPE')]",
                "[concat(variables('factoryId'), '/datasets/D_KONTO')]",
                "[concat(variables('factoryId'), '/datasets/B_KONTO_GRUPPE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_D_KONTO')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "2 Core"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "ST_24SO_ACCOUNT",
                                "type": "DatasetReference"
                            },
                            "name": "Source24SOAccountST"
                        },
                        {
                            "dataset": {
                                "referenceName": "GRL_KONTO_OPPSTILLING",
                                "type": "DatasetReference"
                            },
                            "name": "SourceGRLKontoOppstilling"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "D_KONTO",
                                "type": "DatasetReference"
                            },
                            "name": "SinkDKonto"
                        },
                        {
                            "dataset": {
                                "referenceName": "B_KONTO_OPPSTILLING",
                                "type": "DatasetReference"
                            },
                            "name": "SinkBKontoOppstilling"
                        },
                        {
                            "dataset": {
                                "referenceName": "GRL_KONTO_GRUPPE",
                                "type": "DatasetReference"
                            },
                            "name": "SinkGRLKontoGruppe"
                        },
                        {
                            "dataset": {
                                "referenceName": "B_KONTO_GRUPPE",
                                "type": "DatasetReference"
                            },
                            "name": "SinkBKontoGruppe"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DerivedColumns"
                        },
                        {
                            "name": "CreateBKKontoID"
                        },
                        {
                            "name": "Select1"
                        },
                        {
                            "name": "RenameColumns"
                        },
                        {
                            "name": "CreatePKKontoID"
                        },
                        {
                            "name": "SelectKontoGruppe4"
                        },
                        {
                            "name": "SelectKontoGruppe3"
                        },
                        {
                            "name": "SelectMainStream"
                        },
                        {
                            "name": "SelectKontoGruppe2"
                        },
                        {
                            "name": "SelectKontoOppstilling"
                        },
                        {
                            "name": "Lookup1"
                        },
                        {
                            "name": "FilterKontoNivaa"
                        },
                        {
                            "name": "Lookup2"
                        },
                        {
                            "name": "DerivedColumn1"
                        },
                        {
                            "name": "Select6"
                        },
                        {
                            "name": "DerivedColumn2"
                        },
                        {
                            "name": "Lookup3"
                        },
                        {
                            "name": "Select7"
                        },
                        {
                            "name": "DerivedColumn3"
                        },
                        {
                            "name": "SelectKontoGruppeNavn"
                        },
                        {
                            "name": "Unpivot1"
                        },
                        {
                            "name": "Lookup4"
                        },
                        {
                            "name": "Select8"
                        },
                        {
                            "name": "Lookup5"
                        },
                        {
                            "name": "Deduplicate"
                        },
                        {
                            "name": "KontoGruppeNavn"
                        },
                        {
                            "name": "Pivot1"
                        },
                        {
                            "name": "MapDrifted1",
                            "description": "Creates an explicit mapping for each drifted column"
                        },
                        {
                            "name": "Lookup6"
                        },
                        {
                            "name": "Select9"
                        },
                        {
                            "name": "Lookup7"
                        },
                        {
                            "name": "Window1"
                        },
                        {
                            "name": "SelectBKontoGruppe"
                        },
                        {
                            "name": "Aggregate1"
                        },
                        {
                            "name": "Select10"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_D_KONTO'),\n\tLASTELOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tCLIENT_NAME as string,\n\t\tACCOUNT_ID as integer,\n\t\tACCOUNT_NO as integer,\n\t\tACCOUNT_NAME as string,\n\t\tACCOUNT_TAX as integer,\n\t\tTAX_NO as string,\n\t\tFK_LASTELOGG_INSERT_ID as string,\n\t\tFK_LASTELOGG_UPDATE_ID as string,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Source24SOAccountST\nsource(output(\n\t\tPK_KONTO_OPPSTILLING_ID as integer,\n\t\tKONTO_GRUPPE as string,\n\t\tKONTO_OPPSTILLING_KODE as integer,\n\t\tKONTO_OPPSTILLING_NAVN as string,\n\t\tKONTO_TYPE as string,\n\t\tMOR_KONTO_KODE as integer,\n\t\tKONTO_NIVAA as integer,\n\t\tKONTO_SUM_FLAGG as string,\n\t\tKILDE_OPPRETTET_TS as timestamp,\n\t\tKILDE_OPPDATERT_TS as timestamp,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceGRLKontoOppstilling\nSource24SOAccountST derive(konto_beskr = toString(null()),\n\t\tbalansekonto = case(ACCOUNT_NO>=3000, 'R', 'B')) ~> DerivedColumns\nSelect1 derive(bk_konto_id = concatWS('-', toString(klient_navn), toString(regn_konto))) ~> CreateBKKontoID\nDerivedColumns select(mapColumn(\n\t\tklient_navn = CLIENT_NAME,\n\t\tregn_konto = ACCOUNT_NO,\n\t\tkonto_navn = ACCOUNT_NAME,\n\t\tkonto_beskr,\n\t\tbalansekonto\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nCreateBKKontoID select(mapColumn(\n\t\tKONTO_KODE = regn_konto,\n\t\tKONTO_NAVN = konto_navn,\n\t\tKONTO_TYPE = balansekonto,\n\t\tKONTO_BESKR = konto_beskr,\n\t\tBK_KONTO_ID = bk_konto_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumns\nSelect10 window(asc(BK_KONTO_ID, true),\n\tPK_KONTO_ID = rowNumber()) ~> CreatePKKontoID\nSourceGRLKontoOppstilling select(mapColumn(\n\t\tKONTO_GRUPPE_KODE_4 = KONTO_OPPSTILLING_KODE,\n\t\tMOR_KONTO_KODE_4 = MOR_KONTO_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKontoGruppe4\nSourceGRLKontoOppstilling select(mapColumn(\n\t\tKONTO_GRUPPE_KODE_3 = KONTO_OPPSTILLING_KODE,\n\t\tMOR_KONTO_3 = MOR_KONTO_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKontoGruppe3\nSourceGRLKontoOppstilling select(mapColumn(\n\t\tKONTO_OPPSTILLING_KODE,\n\t\tKONTO_NIVAA\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectMainStream\nSourceGRLKontoOppstilling select(mapColumn(\n\t\tKONTO_GRUPPE_KODE_2 = KONTO_OPPSTILLING_KODE,\n\t\tMOR_KONTO_2 = MOR_KONTO_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKontoGruppe2\nSourceGRLKontoOppstilling select(mapColumn(\n\t\tPK_KONTO_OPPSTILLING_ID,\n\t\tKONTO_OPPSTILLING_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKontoOppstilling\nSelect6, SelectKontoGruppe2 lookup(KONTO_GRUPPE_KODE_1 == MOR_KONTO_2,\n\tmultiple: true,\n\tbroadcast: 'none')~> Lookup1\nSelectMainStream filter(KONTO_NIVAA == 3) ~> FilterKontoNivaa\nDerivedColumn1, SelectKontoGruppe3 lookup(KONTO_GRUPPE_KODE_2 == MOR_KONTO_3,\n\tmultiple: true,\n\tbroadcast: 'none')~> Lookup2\nLookup1 derive(KONTO_GRUPPE_KODE_2 = coalesce(KONTO_GRUPPE_KODE_2,KONTO_GRUPPE_KODE_1)) ~> DerivedColumn1\nFilterKontoNivaa select(mapColumn(\n\t\tKONTO_GRUPPE_KODE_1 = KONTO_OPPSTILLING_KODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nLookup2 derive(KONTO_GRUPPE_KODE_3 = coalesce(KONTO_GRUPPE_KODE_3,KONTO_GRUPPE_KODE_2,KONTO_GRUPPE_KODE_1)) ~> DerivedColumn2\nDerivedColumn2, SelectKontoGruppe4 lookup(KONTO_GRUPPE_KODE_3 == MOR_KONTO_KODE_4,\n\tmultiple: true,\n\tbroadcast: 'none')~> Lookup3\nDerivedColumn3 select(mapColumn(\n\t\tKONTO_GRUPPE_KODE_1,\n\t\tKONTO_GRUPPE_KODE_2,\n\t\tKONTO_GRUPPE_KODE_3,\n\t\tKONTO_GRUPPE_KODE_4\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nLookup3 derive(KONTO_GRUPPE_KODE_4 = coalesce(KONTO_GRUPPE_KODE_4,KONTO_GRUPPE_KODE_3,KONTO_GRUPPE_KODE_2,KONTO_GRUPPE_KODE_1)) ~> DerivedColumn3\nSourceGRLKontoOppstilling select(mapColumn(\n\t\tKONTO_OPPSTILLING_KODE,\n\t\tKONTO_OPPSTILLING_NAVN,\n\t\tKONTO_GRUPPE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectKontoGruppeNavn\nSelect7 unpivot(output(\n\t\tKONTO_GRUPPE_KODE as string,\n\t\tMOR_KONTO_KODE as integer\n\t),\n\tungroupBy(KONTO_GRUPPE_KODE_4),\n\tlateral: false,\n\tignoreNullPivots: false) ~> Unpivot1\nDeduplicate, SelectKontoOppstilling lookup(MOR_KONTO_KODE == KONTO_OPPSTILLING_KODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> Lookup4\nLookup5 select(mapColumn(\n\t\tFK_KONTO_OPPSTILLING_ID = PK_KONTO_OPPSTILLING_ID,\n\t\tFK_KONTO_ID = PK_KONTO_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\nLookup4, CreatePKKontoID lookup(KONTO_GRUPPE_KODE_4 == KONTO_KODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> Lookup5\nUnpivot1 aggregate(groupBy(KONTO_GRUPPE_KODE_4,\n\t\tMOR_KONTO_KODE),\n\tsum = sum(1)) ~> Deduplicate\nUnpivot1, SelectKontoGruppeNavn lookup(MOR_KONTO_KODE == KONTO_OPPSTILLING_KODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> KontoGruppeNavn\nKontoGruppeNavn pivot(groupBy(KONTO_GRUPPE_KODE_4),\n\tpivotBy(KONTO_GRUPPE_KODE),\n\tMKK = first(MOR_KONTO_KODE),\n\t\tKON = first(KONTO_OPPSTILLING_NAVN),\n\tcolumnNaming: '$N$V',\n\tlateral: false) ~> Pivot1\nPivot1 derive(KONTO_GRUPPE_KODE_1 = toInteger(byName('MKKKONTO_GRUPPE_KODE_1')),\n\t\tKONTO_GRUPPE_NAVN_1 = toString(byName('KONKONTO_GRUPPE_KODE_1')),\n\t\tKONTO_GRUPPE_KODE_2 = toInteger(byName('MKKKONTO_GRUPPE_KODE_2')),\n\t\tKONTO_GRUPPE_NAVN_2 = toString(byName('KONKONTO_GRUPPE_KODE_2')),\n\t\tKONTO_GRUPPE_KODE_3 = toInteger(byName('MKKKONTO_GRUPPE_KODE_3')),\n\t\tKONTO_GRUPPE_NAVN_3 = toString(byName('KONKONTO_GRUPPE_KODE_3'))) ~> MapDrifted1\nMapDrifted1, SelectKontoGruppeNavn lookup(KONTO_GRUPPE_KODE_4 == KONTO_OPPSTILLING_KODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> Lookup6\nWindow1 select(mapColumn(\n\t\tKONTO_GRUPPE_KODE_4,\n\t\tKONTO_GRUPPE_KODE_1,\n\t\tKONTO_GRUPPE_NAVN_1,\n\t\tKONTO_GRUPPE_KODE_2,\n\t\tKONTO_GRUPPE_NAVN_2,\n\t\tKONTO_GRUPPE_KODE_3,\n\t\tKONTO_GRUPPE_NAVN_3,\n\t\tKONTO_GRUPPE_NAVN_4 = KONTO_OPPSTILLING_NAVN,\n\t\tKONTO_GRUPPE,\n\t\tPK_KONTO_GRUPPE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select9\nSelect9, CreatePKKontoID lookup(KONTO_GRUPPE_KODE_4 == KONTO_KODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> Lookup7\nLookup6 window(asc(KONTO_GRUPPE_KODE_4, true),\n\tPK_KONTO_GRUPPE_ID = rowNumber()) ~> Window1\nLookup7 select(mapColumn(\n\t\tFK_KONTO_ID = PK_KONTO_ID,\n\t\tFK_KONTO_GRUPPE_ID = PK_KONTO_GRUPPE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBKontoGruppe\nRenameColumns aggregate(groupBy(KONTO_KODE,\n\t\tKONTO_NAVN,\n\t\tKONTO_TYPE,\n\t\tKONTO_BESKR,\n\t\tBK_KONTO_ID),\n\tsum = sum(1)) ~> Aggregate1\nAggregate1 select(mapColumn(\n\t\tKONTO_KODE,\n\t\tKONTO_NAVN,\n\t\tKONTO_TYPE,\n\t\tKONTO_BESKR,\n\t\tBK_KONTO_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select10\nCreatePKKontoID sink(input(\n\t\tPK_KONTO_ID as integer,\n\t\tRK_KONTO_ID as integer,\n\t\tBK_KONTO_ID as string,\n\t\tKONTO_KODE as integer,\n\t\tKONTO_NAVN as string,\n\t\tKONTO_TYPE as string,\n\t\tKONTO_BESKR as string,\n\t\tKILDE_OPPRETTET_TS as timestamp,\n\t\tKILDE_OPPDATERT_TS as timestamp,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkDKonto\nSelect8 sink(input(\n\t\tFK_KONTO_ID as integer,\n\t\tFK_KONTO_OPPSTILLING_ID as integer,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkBKontoOppstilling\nSelect9 sink(input(\n\t\tPK_KONTO_GRUPPE_ID as integer,\n\t\tKONTO_GRUPPE as string,\n\t\tKONTO_GRUPPE_KODE_N as integer,\n\t\tKONTO_GRUPPE_NAVN_N as string,\n\t\tKONTO_GRUPPE_KODE_1 as integer,\n\t\tKONTO_GRUPPE_NAVN_1 as string,\n\t\tKONTO_GRUPPE_KODE_2 as integer,\n\t\tKONTO_GRUPPE_NAVN_2 as string,\n\t\tKONTO_GRUPPE_KODE_3 as integer,\n\t\tKONTO_GRUPPE_NAVN_3 as string,\n\t\tKONTO_GRUPPE_KODE_4 as integer,\n\t\tKONTO_GRUPPE_NAVN_4 as string,\n\t\tKONTO_GRUPPE_KODE_5 as integer,\n\t\tKONTO_GRUPPE_NAVN_5 as string,\n\t\tKONTO_GRUPPE_KODE_6 as integer,\n\t\tKONTO_GRUPPE_NAVN_6 as string,\n\t\tKONTO_GRUPPE_KODE_7 as integer,\n\t\tKONTO_GRUPPE_NAVN_7 as string,\n\t\tKONTO_GRUPPE_KODE_8 as integer,\n\t\tKONTO_GRUPPE_NAVN_8 as string,\n\t\tKONTO_GRUPPE_KODE_9 as integer,\n\t\tKONTO_GRUPPE_NAVN_9 as string,\n\t\tKONTO_GRUPPE_KODE_10 as integer,\n\t\tKONTO_GRUPPE_NAVN_10 as string,\n\t\tKONTO_GRUPPE_KODE_11 as integer,\n\t\tKONTO_GRUPPE_NAVN_11 as string,\n\t\tKONTO_GRUPPE_KODE_12 as integer,\n\t\tKONTO_GRUPPE_NAVN_12 as string,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_ENDRING_TYPE as string,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkGRLKontoGruppe\nSelectBKontoGruppe sink(input(\n\t\tFK_KONTO_ID as integer,\n\t\tFK_KONTO_GRUPPE_ID as integer,\n\t\tFK_LASTELOGG_INSERT_ID as integer,\n\t\tFK_LASTELOGG_UPDATE_ID as integer,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp,\n\t\tRAD_GYLDIG_FRA_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkBKontoGruppe"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ST_24SO_ACCOUNT')]",
                "[concat(variables('factoryId'), '/datasets/GRL_KONTO_OPPSTILLING')]",
                "[concat(variables('factoryId'), '/datasets/D_KONTO')]",
                "[concat(variables('factoryId'), '/datasets/B_KONTO_OPPSTILLING')]",
                "[concat(variables('factoryId'), '/datasets/GRL_KONTO_GRUPPE')]",
                "[concat(variables('factoryId'), '/datasets/B_KONTO_GRUPPE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_MAN_KUNDEFORDRINGER')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "3 Demo"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "BLOB_MAN_KUNDEFORDRINGER",
                                "type": "DatasetReference"
                            },
                            "name": "SourceManInputKundefordr"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "MAN_KUNDEFORDRINGER",
                                "type": "DatasetReference"
                            },
                            "name": "sink1"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "DerivedColumn1"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_MAN_KUNDEFORDRINGER'),\n\tLASTELOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\t{Antall dager sen} as string,\n\t\tBetalingsfrist as string,\n\t\t{Betalt dato} as string,\n\t\t{Dager til betalt} as string,\n\t\tElektronisk as string,\n\t\t{Fakturabeløp} as string,\n\t\tFakturadato as string,\n\t\tFakturanummer as string,\n\t\t{Forventet innbetalt} as string,\n\t\tKlage as string,\n\t\t{Kunde ID} as string,\n\t\tLandkode as string,\n\t\tType as string,\n\t\tFK_PERIODE_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceManInputKundefordr\nSourceManInputKundefordr derive({Antall dager sen} = toInteger({Antall dager sen}),\n\t\tBetalingsfrist = toDate(Betalingsfrist),\n\t\t{Betalt dato} = toDate({Betalt dato}),\n\t\t{Dager til betalt} = toInteger({Dager til betalt}),\n\t\t{Fakturabeløp} = toDecimal({Fakturabeløp})*10,\n\t\tFakturadato = toDate(Fakturadato),\n\t\tFakturanummer = toLong(Fakturanummer),\n\t\tLandkode = toInteger(Landkode),\n\t\tFK_PERIODE_ID = toInteger(FK_PERIODE_ID)) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tFK_PERIODE_ID as integer,\n\t\tType as string,\n\t\t{Antall dager sen} as integer,\n\t\tBetalingsfrist as date,\n\t\t{Betalt dato} as date,\n\t\t{Dager til betalt} as integer,\n\t\tElektronisk as string,\n\t\t{Fakturabeløp} as double,\n\t\tFakturadato as date,\n\t\tFakturanummer as long,\n\t\t{Forventet innbetalt} as string,\n\t\tKlage as string,\n\t\t{Kunde ID} as string,\n\t\tLandkode as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BLOB_MAN_KUNDEFORDRINGER')]",
                "[concat(variables('factoryId'), '/datasets/MAN_KUNDEFORDRINGER')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_ST_24SO_COMPANY')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "0 Stage"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "RAW_24SO_COMPANY",
                                "type": "DatasetReference"
                            },
                            "name": "Source24SOCompanyRW"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ST_24SO_COMPANY",
                                "type": "DatasetReference"
                            },
                            "name": "Sink24SOCompanyST"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AddMetadata"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_ST_24SO_COMPANY'),\n\tLASTE_LOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tClientName as string,\n\t\tAccountId as integer,\n\t\tAccountNo as integer,\n\t\tAccountName as string,\n\t\tAccountTax as integer,\n\t\tTaxNo as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Source24SOCompanyRW\nSource24SOCompanyRW derive(JobbInsertNavn = $JOB_NAME,\n\t\tJobbUpdateNavn = $JOB_NAME,\n\t\tRadInsertTS = currentUTC(),\n\t\tRadUpdateTS = currentUTC(),\n\t\tFKLasteloggInsertID = $LASTE_LOGG,\n\t\tFKLasteloggUpdateID = $LASTE_LOGG) ~> AddMetadata\nAddMetadata sink(input(\n\t\tClientName as string,\n\t\tId as integer,\n\t\tExternalId as string,\n\t\tOrganizationNumber as string,\n\t\tName as string,\n\t\tFirstName as string,\n\t\tNickName as string,\n\t\tPostStreet as string,\n\t\tPostState as string,\n\t\tPostPostalCode as string,\n\t\tPostPostalArea as string,\n\t\tPostName as string,\n\t\tPostCity as string,\n\t\tPostCountry as string,\n\t\tDeliveryStreet as string,\n\t\tDeliveryState as string,\n\t\tDeliveryPostalCode as string,\n\t\tDeliveryPostalArea as string,\n\t\tDeliveryName as string,\n\t\tDeliveryCity as string,\n\t\tDeliveryCountry as string,\n\t\tVisitStreet as string,\n\t\tVisitState as string,\n\t\tVisitPostalCode as string,\n\t\tVisitPostalArea as string,\n\t\tVisitName as string,\n\t\tVisitCity as string,\n\t\tVisitCountry as string,\n\t\tInvoiceStreet as string,\n\t\tInvoiceState as string,\n\t\tInvoicePostalCode as string,\n\t\tInvoicePostalArea as string,\n\t\tInvoiceName as string,\n\t\tInvoiceCity as string,\n\t\tInvoiceCountry as string,\n\t\tPhoneNumberHomeDescription as string,\n\t\tPhoneNumberHomeValue as string,\n\t\tPhoneNumberFaxDescription as string,\n\t\tPhoneNumberFaxValue as string,\n\t\tPhoneNumberMobileDescription as string,\n\t\tPhoneNumberMobileValue as string,\n\t\tPhoneNumberPrimaryDescription as string,\n\t\tPhoneNumberPrimaryValue as string,\n\t\tPhoneNumberWorkDescription as string,\n\t\tPhoneNumberWorkValue as string,\n\t\tEmailAddressHomeDescription as string,\n\t\tEmailAddressHomeName as string,\n\t\tEmailAddressHomeValue as string,\n\t\tEmailAddressInvoiceDescription as string,\n\t\tEmailAddressInvoiceName as string,\n\t\tEmailAddressInvoiceValue as string,\n\t\tEmailAddressPrimaryDescription as string,\n\t\tEmailAddressPrimaryName as string,\n\t\tEmailAddressPrimaryValue as string,\n\t\tEmailAddressWorkDescription as string,\n\t\tEmailAddressWorkName as string,\n\t\tEmailAddressWorkValue as string,\n\t\tEmailAddressAlternativeDescription as string,\n\t\tEmailAddressAlternativeName as string,\n\t\tEmailAddressAlternativeValue as string,\n\t\tUrl as string,\n\t\tCountry as string,\n\t\tNote as string,\n\t\tInvoiceLanguage as string,\n\t\tType as string,\n\t\tUsername as string,\n\t\tPassword as string,\n\t\tIncorporationDate as timestamp,\n\t\tDateCreated as timestamp,\n\t\tStatus as integer,\n\t\tPriceList as integer,\n\t\tOwner as integer,\n\t\tBankAccountNo as string,\n\t\tTermsOfDeliveryId as integer,\n\t\tAccountDebit as integer,\n\t\tAccountCredit as integer,\n\t\tDiscount as double,\n\t\tTypeGroup as integer,\n\t\tShareCapital as double,\n\t\tNumberOfEmployees as integer,\n\t\tTurnover as double,\n\t\tProfit as double,\n\t\tIndustryId as integer,\n\t\tMemberNo as integer,\n\t\tDateChanged as timestamp,\n\t\tBlockInvoice as string,\n\t\tDistributionMethod as string,\n\t\tCurrencyId as string,\n\t\tPaymentTime as integer,\n\t\tGlnNumber as string,\n\t\tFactoring as string,\n\t\tLedgerCustomerAccount as integer,\n\t\tLedgerSupplierAccount as integer,\n\t\tVatNumber as string,\n\t\tPrivate as string,\n\t\tFKLasteloggInsertID as string,\n\t\tFKLasteloggUpdateID as string,\n\t\tJobbInsertNavn as string,\n\t\tJobbUpdateNavn as string,\n\t\tRadInsertTS as timestamp,\n\t\tRadUpdateTS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink24SOCompanyST"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/RAW_24SO_COMPANY')]",
                "[concat(variables('factoryId'), '/datasets/ST_24SO_COMPANY')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_ST_24SO_TRANSACTION')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "0 Stage"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "RAW_24SO_TRANSACTION",
                                "type": "DatasetReference"
                            },
                            "name": "SourceRAW24SOTranscaction"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ST_24SO_TRANSACTION",
                                "type": "DatasetReference"
                            },
                            "name": "SinkST24SOTransaction"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "CastOpenToBoolean"
                        },
                        {
                            "name": "AddMetadata"
                        },
                        {
                            "name": "Select1"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_ST_24SO_TRANSACTION'),\n\tLASTE_LOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tCLIENT_NAME as string,\n\t\tDATE as timestamp,\n\t\tACCOUNT_NO as integer,\n\t\tCURRENCY as string,\n\t\tCURRENCY_RATE as double,\n\t\tCURRENCY_UNIT as integer,\n\t\tAMOUNT as double,\n\t\tSTAMP_NO as integer,\n\t\tPERIOD as integer,\n\t\tTRANSACTION_TYPE_ID as integer,\n\t\tCOMMENT as string,\n\t\tTRANSACTION_NO as integer,\n\t\tVAT_CODE as integer,\n\t\tID as string,\n\t\tLINK_ID as integer,\n\t\tINVOICE_NO as string,\n\t\tSEQUENCE_NO as string,\n\t\tSYSTEM_TYPE as string,\n\t\tDUE_DATE as timestamp,\n\t\tPROJECT_NAME as string,\n\t\tPROJECT_PERCENT as double,\n\t\tPROJECT_VALUE as string,\n\t\tPROJECT_TYPE_ID as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tDEPARTMENT_VALUE as string,\n\t\tDEPARTMENT_PERCENT as double,\n\t\tDEPARTMENT_TYPE_ID as integer,\n\t\tEMPLOYEE_NAME as string,\n\t\tEMPLOYEE_VALUE as string,\n\t\tEMPLOYEE_PERCENT as double,\n\t\tEMPLOYEE_TYPE_ID as string,\n\t\tPRODUCT_NAME as string,\n\t\tPRODUCT_VALUE as string,\n\t\tPRODUCT_PERCENT as double,\n\t\tPRODUCT_TYPE_ID as integer,\n\t\tCUSTOMER_NAME as string,\n\t\tCUSTOMER_VALUE as string,\n\t\tCUSTOMER_PERCENT as double,\n\t\tCUSTOMER_TYPE_ID as integer,\n\t\tCUSTOMER_ORDER_SLIP_NAME as string,\n\t\tCUSTOMER_ORDER_SLIP_VALUE as string,\n\t\tCUSTOMER_ORDER_SLIP_PERCENT as double,\n\t\tCUSTOMER_ORDER_SLIP_TYPE_ID as integer,\n\t\tSUPPLIER_ORDER_SLIP_NAME as string,\n\t\tSUPPLIER_ORDER_SLIP_VALUE as string,\n\t\tSUPPLIER_ORDER_SLIP_PERCENT as double,\n\t\tSUPPLIER_ORDER_SLIP_TYPE_ID as integer,\n\t\tREGISTRATION_DATE as timestamp,\n\t\tDATE_CHANGED as timestamp,\n\t\tHIDDEN as string,\n\t\tOPEN as string,\n\t\tOCR as string,\n\t\tHAS_VAT_DIVIDEND as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SourceRAW24SOTranscaction\nSourceRAW24SOTranscaction derive(OPEN = toBoolean(OPEN)) ~> CastOpenToBoolean\nCastOpenToBoolean derive(JOBB_INSERT_NAVN = $JOB_NAME,\n\t\tJOBB_UPDATE_NAVN = $JOB_NAME,\n\t\tRAD_INSERT_TS = currentUTC(),\n\t\tRAD_UPDATE_TS = currentUTC(),\n\t\tFK_LASTELOGG_INSERT_ID = $LASTE_LOGG,\n\t\tFK_LASTELOGG_UPDATE_ID = $LASTE_LOGG) ~> AddMetadata\nAddMetadata select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tCLIENT_NAME as string,\n\t\tDATE as timestamp,\n\t\tACCOUNT_NO as integer,\n\t\tCURRENCY as string,\n\t\tCURRENCY_RATE as double,\n\t\tCURRENCY_UNIT as integer,\n\t\tAMOUNT as double,\n\t\tSTAMP_NO as integer,\n\t\tPERIOD as integer,\n\t\tTRANSACTION_TYPE_ID as integer,\n\t\tCOMMENT as string,\n\t\tTRANSACTION_NO as integer,\n\t\tVAT_CODE as integer,\n\t\tID as string,\n\t\tLINK_ID as integer,\n\t\tINVOICE_NO as string,\n\t\tSEQUENCE_NO as string,\n\t\tSYSTEM_TYPE as string,\n\t\tDUE_DATE as timestamp,\n\t\tPROJECT_NAME as string,\n\t\tPROJECT_PERCENT as double,\n\t\tPROJECT_VALUE as string,\n\t\tPROJECT_TYPE_ID as integer,\n\t\tDEPARTMENT_NAME as string,\n\t\tDEPARTMENT_VALUE as string,\n\t\tDEPARTMENT_PERCENT as double,\n\t\tDEPARTMENT_TYPE_ID as integer,\n\t\tEMPLOYEE_NAME as string,\n\t\tEMPLOYEE_VALUE as string,\n\t\tEMPLOYEE_PERCENT as double,\n\t\tEMPLOYEE_TYPE_ID as string,\n\t\tPRODUCT_NAME as string,\n\t\tPRODUCT_VALUE as string,\n\t\tPRODUCT_PERCENT as double,\n\t\tPRODUCT_TYPE_ID as integer,\n\t\tCUSTOMER_NAME as string,\n\t\tCUSTOMER_VALUE as string,\n\t\tCUSTOMER_PERCENT as double,\n\t\tCUSTOMER_TYPE_ID as integer,\n\t\tCUSTOMER_ORDER_SLIP_NAME as string,\n\t\tCUSTOMER_ORDER_SLIP_VALUE as string,\n\t\tCUSTOMER_ORDER_SLIP_PERCENT as double,\n\t\tCUSTOMER_ORDER_SLIP_TYPE_ID as integer,\n\t\tSUPPLIER_ORDER_SLIP_NAME as string,\n\t\tSUPPLIER_ORDER_SLIP_VALUE as string,\n\t\tSUPPLIER_ORDER_SLIP_PERCENT as double,\n\t\tSUPPLIER_ORDER_SLIP_TYPE_ID as integer,\n\t\tREGISTRATION_DATE as timestamp,\n\t\tDATE_CHANGED as timestamp,\n\t\tHIDDEN as string,\n\t\tOPEN as string,\n\t\tOCR as string,\n\t\tHAS_VAT_DIVIDEND as string,\n\t\tFK_LASTELOGG_INSERT_ID as string,\n\t\tFK_LASTELOGG_UPDATE_ID as string,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkST24SOTransaction"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/RAW_24SO_TRANSACTION')]",
                "[concat(variables('factoryId'), '/datasets/ST_24SO_TRANSACTION')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_ST_MAN_DATO')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "0 Stage"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "MAN_DATO",
                                "type": "DatasetReference"
                            },
                            "name": "SourceManDatoRW"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ST_DATO",
                                "type": "DatasetReference"
                            },
                            "name": "SinkManDatoST"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AddMetadata"
                        },
                        {
                            "name": "DerivedColumn1"
                        },
                        {
                            "name": "ToUpper"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_ST_MAN_DATO'),\n\tLASTE_LOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tdato_id as string,\n\t\tdato as string,\n\t\tdag_i_uke as string,\n\t\tdag_nummer_i_maaned as string,\n\t\tdag_nummer_total as string,\n\t\tdag_navn as string,\n\t\tdag_navn_kort as string,\n\t\tukedag_flagg as string,\n\t\tuke_nummer_i_aar as string,\n\t\tuke_nummer_total as string,\n\t\tfoerste_dato_uke as string,\n\t\tfoerste_dato_uke_id as string,\n\t\tmaaned as string,\n\t\tmaaned_nummer_total as string,\n\t\tmaaned_navn as string,\n\t\tmaaned_navn_kort as string,\n\t\tkvartal as string,\n\t\taar as string,\n\t\taar_maaned as string,\n\t\tfiskal_maaned as string,\n\t\tfiskal_kvartal as string,\n\t\tfiskal_aar as string,\n\t\tmaaned_slutt_flagg as string,\n\t\tdato_forrige_aar as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> SourceManDatoRW\nDerivedColumn1 derive(JOBB_INSERT_NAVN = $JOB_NAME,\n\t\tJOBB_UPDATE_NAVN = $JOB_NAME,\n\t\tRAD_INSERT_TS = currentUTC(),\n\t\tRAD_UPDATE_TS = currentUTC(),\n\t\tFK_LASTELOGG_INSERT_ID = $LASTE_LOGG,\n\t\tFK_LASTELOGG_UPDATE_ID = $LASTE_LOGG) ~> AddMetadata\nSourceManDatoRW derive(dato = toDate(concatWS('-', right(dato, 4), substring(dato,4,2), left(dato, 2))),\n\t\tfoerste_dato_uke = toDate(concatWS('-', right(foerste_dato_uke, 4), substring(foerste_dato_uke,4,2), left(foerste_dato_uke, 2))),\n\t\tdato_forrige_aar = toDate(concatWS('-', right(dato_forrige_aar, 4), substring(dato_forrige_aar,4,2), left(dato_forrige_aar, 2)))) ~> DerivedColumn1\nAddMetadata select(mapColumn(\n\t\tDATO_ID = dato_id,\n\t\tDATO = dato,\n\t\tDAG_I_UKE = dag_i_uke,\n\t\tDAG_NUMMER_I_MAANED = dag_nummer_i_maaned,\n\t\tDAG_NUMMER_TOTAL = dag_nummer_total,\n\t\tDAG_NAVN = dag_navn,\n\t\tDAG_NAVN_KORT = dag_navn_kort,\n\t\tUKEDAG_FLAGG = ukedag_flagg,\n\t\tUKE_NUMMER_I_AAR = uke_nummer_i_aar,\n\t\tUKE_NUMMER_TOTAL = uke_nummer_total,\n\t\tFOERSTE_DATO_UKE = foerste_dato_uke,\n\t\tFOERSTE_DATO_UKE_ID = foerste_dato_uke_id,\n\t\tMAANED = maaned,\n\t\tMAANED_NUMMER_TOTAL = maaned_nummer_total,\n\t\tMAANED_NAVN = maaned_navn,\n\t\tMAANED_NAVN_KORT = maaned_navn_kort,\n\t\tKVARTAL = kvartal,\n\t\tAAR = aar,\n\t\tAAR_MAANED = aar_maaned,\n\t\tFISKAL_MAANED = fiskal_maaned,\n\t\tFISKAL_KVARTAL = fiskal_kvartal,\n\t\tFISKAL_AAR = fiskal_aar,\n\t\tMAANED_SLUTT_FLAGG = maaned_slutt_flagg,\n\t\tDATO_FORRIGE_AAR = dato_forrige_aar,\n\t\tJOBB_INSERT_NAVN,\n\t\tJOBB_UPDATE_NAVN,\n\t\tRAD_INSERT_TS,\n\t\tRAD_UPDATE_TS,\n\t\tFK_LASTELOGG_INSERT_ID,\n\t\tFK_LASTELOGG_UPDATE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ToUpper\nToUpper sink(input(\n\t\tDATO_ID as integer,\n\t\tDATO as date,\n\t\tDAG_I_UKE as integer,\n\t\tDAG_NUMMER_I_MAANED as integer,\n\t\tDAG_NUMMER_TOTAL as integer,\n\t\tDAG_NAVN as string,\n\t\tDAG_NAVN_KORT as string,\n\t\tUKEDAG_FLAGG as boolean,\n\t\tUKE_NUMMER_I_AAR as integer,\n\t\tUKE_NUMMER_TOTAL as integer,\n\t\tFOERSTE_DATO_UKE as date,\n\t\tFOERSTE_DATO_UKE_ID as integer,\n\t\tMAANED as integer,\n\t\tMAANED_NUMMER_TOTAL as integer,\n\t\tMAANED_NAVN as string,\n\t\tMAANED_NAVN_KORT as string,\n\t\tKVARTAL as integer,\n\t\tAAR as integer,\n\t\tAAR_MAANED as integer,\n\t\tFISKAL_MAANED as integer,\n\t\tFISKAL_KVARTAL as integer,\n\t\tFISKAL_AAR as integer,\n\t\tMAANED_SLUTT_FLAGG as boolean,\n\t\tDATO_FORRIGE_AAR as date,\n\t\tFK_LASTELOGG_INSERT_ID as string,\n\t\tFK_LASTELOGG_UPDATE_ID as string,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SinkManDatoST"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/MAN_DATO')]",
                "[concat(variables('factoryId'), '/datasets/ST_DATO')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_ST_24SO_ACCOUNT')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "0 Stage"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "RAW_24SO_ACCOUNT",
                                "type": "DatasetReference"
                            },
                            "name": "Source24SOAccountRW"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ST_24SO_ACCOUNT",
                                "type": "DatasetReference"
                            },
                            "name": "Sink24SOAccountST"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AddMetadata"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_ST_24SO_ACCOUNT'),\n\tLASTE_LOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tCLIENT_NAME as string,\n\t\tACCOUNT_ID as integer,\n\t\tACCOUNT_NO as integer,\n\t\tACCOUNT_NAME as string,\n\t\tACCOUNT_TAX as integer,\n\t\tTAX_NO as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Source24SOAccountRW\nSource24SOAccountRW derive(JOBB_INSERT_NAVN = $JOB_NAME,\n\t\tJOBB_UPDATE_NAVN = $JOB_NAME,\n\t\tRAD_INSERT_TS = currentUTC(),\n\t\tRAD_UPDATE_TS = currentUTC(),\n\t\tFK_LASTELOGG_INSERT_ID = $LASTE_LOGG,\n\t\tFK_LASTELOGG_UPDATE_ID = $LASTE_LOGG) ~> AddMetadata\nAddMetadata sink(input(\n\t\tCLIENT_NAME as string,\n\t\tACCOUNT_ID as integer,\n\t\tACCOUNT_NO as integer,\n\t\tACCOUNT_NAME as string,\n\t\tACCOUNT_TAX as integer,\n\t\tTAX_NO as string,\n\t\tFK_LASTELOGG_INSERT_ID as string,\n\t\tFK_LASTELOGG_UPDATE_ID as string,\n\t\tJOBB_INSERT_NAVN as string,\n\t\tJOBB_UPDATE_NAVN as string,\n\t\tRAD_INSERT_TS as timestamp,\n\t\tRAD_UPDATE_TS as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink24SOAccountST"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/RAW_24SO_ACCOUNT')]",
                "[concat(variables('factoryId'), '/datasets/ST_24SO_ACCOUNT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/TR_ST_24SO_DEPARTMENT')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "folder": {
                    "name": "0 Stage"
                },
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "RAW_24SO_DEPARTMENT",
                                "type": "DatasetReference"
                            },
                            "name": "Source24SODepartmentRW"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "ST_24SO_DEPARTMENT",
                                "type": "DatasetReference"
                            },
                            "name": "Sink24SODepartmentST"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "AddMetadata"
                        }
                    ],
                    "script": "parameters{\n\tJOB_NAME as string ('TR_ST_24SO_DEPARTMENT'),\n\tLASTE_LOGG as string ('@{pipeline().RunId}')\n}\nsource(output(\n\t\tClientName as string,\n\t\tId as integer,\n\t\tName as string,\n\t\tPostStreet as string,\n\t\tPostState as string,\n\t\tPostPostalCode as string,\n\t\tPostPostalArea as string,\n\t\tPostName as string,\n\t\tPostCity as string,\n\t\tPostCountry as string,\n\t\tDeliveryStreet as string,\n\t\tDeliveryState as string,\n\t\tDeliveryPostalCode as string,\n\t\tDeliveryPostalArea as string,\n\t\tDeliveryName as string,\n\t\tDeliveryCity as string,\n\t\tDeliveryCountry as string,\n\t\tVisitStreet as string,\n\t\tVisitState as string,\n\t\tVisitPostalCode as string,\n\t\tVisitPostalArea as string,\n\t\tVisitName as string,\n\t\tVisitCity as string,\n\t\tVisitCountry as string,\n\t\tInvoiceStreet as string,\n\t\tInvoiceState as string,\n\t\tInvoicePostalCode as string,\n\t\tInvoicePostalArea as string,\n\t\tInvoiceName as string,\n\t\tInvoiceCity as string,\n\t\tInvoiceCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Source24SODepartmentRW\nSource24SODepartmentRW derive(JobbInsertNavn = $JOB_NAME,\n\t\tJobbUpdateNavn = $JOB_NAME,\n\t\tRadInsertTS = currentUTC(),\n\t\tRadUpdateTS = currentUTC(),\n\t\tFKLasteloggInsertID = $LASTE_LOGG,\n\t\tFKLasteloggUpdateID = $LASTE_LOGG) ~> AddMetadata\nAddMetadata sink(input(\n\t\tClientName as string,\n\t\tId as integer,\n\t\tName as string,\n\t\tPostStreet as string,\n\t\tPostState as string,\n\t\tPostPostalCode as string,\n\t\tPostPostalArea as string,\n\t\tPostName as string,\n\t\tPostCity as string,\n\t\tPostCountry as string,\n\t\tDeliveryStreet as string,\n\t\tDeliveryState as string,\n\t\tDeliveryPostalCode as string,\n\t\tDeliveryPostalArea as string,\n\t\tDeliveryName as string,\n\t\tDeliveryCity as string,\n\t\tDeliveryCountry as string,\n\t\tVisitStreet as string,\n\t\tVisitState as string,\n\t\tVisitPostalCode as string,\n\t\tVisitPostalArea as string,\n\t\tVisitName as string,\n\t\tVisitCity as string,\n\t\tVisitCountry as string,\n\t\tInvoiceStreet as string,\n\t\tInvoiceState as string,\n\t\tInvoicePostalCode as string,\n\t\tInvoicePostalArea as string,\n\t\tInvoiceName as string,\n\t\tInvoiceCity as string,\n\t\tInvoiceCountry as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink24SODepartmentST"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/RAW_24SO_DEPARTMENT')]",
                "[concat(variables('factoryId'), '/datasets/ST_24SO_DEPARTMENT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GRL_KOMMENTARER')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "3 Grunnlag"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "entry_id",
                        "type": "nvarchar"
                    },
                    {
                        "name": "entry_ts",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "PrincipalNavn",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Bruker",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Nokkel",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Kommentar",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "GRL_KOMMENTARER"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GRL_ORGANISASJON_GRUPPE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "3 Grunnlag"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_ORGANISASJON_GRUPPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_N",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_N",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_1",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_1",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_2",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_2",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_3",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_3",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_4",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_4",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_5",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_5",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_6",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_6",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_7",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_7",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_8",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_8",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_9",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_9",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_KODE_10",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_GRUPPE_NAVN_10",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "GRL_ORGANISASJON_GRUPPE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_KONTO')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_KONTO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "RK_KONTO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BK_KONTO_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_KODE",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_BESKR",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KILDE_OPPRETTET_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "KILDE_OPPDATERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "D_KONTO"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_SCENARIO')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_SCENARIO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "RK_SCENARIO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BK_SCENARIO_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SCENARIO_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SCENARIO_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SCENARIO_AAR",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "SCENARIO_VERSJON",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "SCENARIO_GJELDENDE",
                        "type": "bit"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "D_SCENARIO"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_PROSJEKT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_PROSJEKT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BK_PROSJEKT_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RK_PROSJEKT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "PROSJEKT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PROSJEKT_BESKR",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PROSJEKT_NUMMER",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KILDE_OPPRETTET_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "KILDE_OPPDATERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "D_PROSJEKT"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/B_KONTO_GRUPPE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "4 Bridge"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "FK_KONTO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_KONTO_GRUPPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "B_KONTO_GRUPPE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/lastelogg')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_LASTELOGG",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KJORE_DATO",
                        "type": "date"
                    },
                    {
                        "name": "JOBB_PARENT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KILDETABELL",
                        "type": "nvarchar"
                    },
                    {
                        "name": "MAALTABELL",
                        "type": "nvarchar"
                    },
                    {
                        "name": "INSERT_ANT",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "UPDATE_ANT",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DELETE_ANT",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_START_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "JOBB_FERDIG_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "JOBB_STATUS",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FEILMELDING",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "LASTELOGG"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_KUNDE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_KUNDE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BK_KUNDE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RK_KUNDE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KILDESYSTEM",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KLIENT_NUMMER",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JURIDISK_KJOENN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_NUMMER",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "NAERING",
                        "type": "nvarchar"
                    },
                    {
                        "name": "TOTALKUNDE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "START_DATO",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "SLUTT_DATO",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "ADRESSE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "POSTNUMMER",
                        "type": "nvarchar"
                    },
                    {
                        "name": "POSTNUMMER_LAT",
                        "type": "float",
                        "precision": 15
                    },
                    {
                        "name": "POSTNUMMER_LONG",
                        "type": "float",
                        "precision": 15
                    },
                    {
                        "name": "POSTSTED",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KOMMUNE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FYLKE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "LAND",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KILDE_OPPRETTET_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "KILDE_OPPDATERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "D_KUNDE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GRL_KOMMENTARER_URL')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "3 Grunnlag"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "AIRTABLE_URL",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "GRL_KOMMENTARER_URL"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/F_OKONOMI')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "FK_KONTO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_SELSKAP_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_ORGANISASJON_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_TJENESTE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_SCENARIO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_PERIODE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BELOP",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "F_OKONOMI"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/F_KUNDE_OMSETNING')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "FK_KUNDE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_TJENESTE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_SELSKAP_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_PERIODE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "OMSETNING_BOKF_BELOP_SUM",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "TIMER_ANT_SUM",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "OMSETNING_EST_BELOP_SUM",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "F_KUNDE_OMSETNING"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/B_ORGANISASJON_GRUPPE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "4 Bridge"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "FK_ORGANISASJON_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_ORGANISASJON_GRUPPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "B_ORGANISASJON_GRUPPE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_DATO')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "DATO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DATO",
                        "type": "date"
                    },
                    {
                        "name": "DAG_I_UKE",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DAG_NUMMER_I_MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DAG_NUMMER_TOTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DAG_NAVN",
                        "type": "varchar"
                    },
                    {
                        "name": "DAG_NAVN_KORT",
                        "type": "varchar"
                    },
                    {
                        "name": "UKEDAG_FLAGG",
                        "type": "bit"
                    },
                    {
                        "name": "UKE_NUMMER_I_AAR",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "UKE_NUMMER_TOTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FOERSTE_DATO_UKE",
                        "type": "date"
                    },
                    {
                        "name": "FOERSTE_DATO_UKE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED_NUMMER_TOTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED_NAVN",
                        "type": "varchar"
                    },
                    {
                        "name": "MAANED_NAVN_KORT",
                        "type": "varchar"
                    },
                    {
                        "name": "KVARTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AAR",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AAR_MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FISKAL_MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FISKAL_KVARTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FISKAL_AAR",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED_SLUTT_FLAGG",
                        "type": "bit"
                    },
                    {
                        "name": "DATO_FORRIGE_AAR",
                        "type": "date"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "D_DATO"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_BUTIKK')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_BUTIKK_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "RK_BUTIKK_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BK_BUTIKK_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BUTIKK_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BUTIKK_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BUTIKK_NAVN_OG_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BUTIKK_AKTIV",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BUTIKK_AVTALE_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BUTIKK_POST_NR",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BUTIKK_KJEDE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BUTIKK_LOKAL_AVTALE_FLAGG",
                        "type": "nvarchar"
                    },
                    {
                        "name": "GYLDIG_FRA_DATO",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "GYLDIG_TIl_DATO",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "GYLDIG_FLAGG",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "D_BUTIKK"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_PERIODE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "D_PERIODE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DATO_ID_FOERSTE",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "REGNSK_AAR",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KVARTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "MAANED_NAVN_KORT",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "D_PERIODE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GRL_KONTO_OPPSTILLING')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "3 Grunnlag"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_KONTO_OPPSTILLING_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_OPPSTILLING_KODE",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_OPPSTILLING_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "MOR_KONTO_KODE",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_NIVAA",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_SUM_FLAGG",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KILDE_OPPRETTET_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "KILDE_OPPDATERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "GRL_KONTO_OPPSTILLING"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GRL_KONTO_GRUPPE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "3 Grunnlag"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_KONTO_GRUPPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_N",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_N",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_1",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_1",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_2",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_2",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_3",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_3",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_4",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_4",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_5",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_5",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_6",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_6",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_7",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_7",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_8",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_8",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_9",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_9",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_10",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_10",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_11",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_11",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_12",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_12",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "GRL_KONTO_GRUPPE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_ORGANISASJON')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_ORGANISASJON_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "RK_ORGANISASJON_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BK_ORGANISASJON_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ORGANISASJON_KODE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KILDE_OPPRETTET_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "KILDE_OPPDATERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "D_ORGANISASJON"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_PROSJEKT_FASE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_PROSJEKT_FASE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BK_PROSJEKT_FASE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RK_PROSJEKT_FASE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "PROSJEKT_FASE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PROSJEKT_FASE_BESKR",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KILDE_OPPRETTET_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "KILDE_OPPDATERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "D_PROSJEKT_FASE"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/D_SELSKAP')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "5 Core"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PK_SELSKAP_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "RK_SELSKAP_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BK_SELSKAP_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "SELSKAP_KODE_N",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_N",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_1",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_1",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_2",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_2",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_3",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_3",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_4",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_4",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_5",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_5",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_6",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_6",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_7",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_7",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_8",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_8",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_9",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_9",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_KODE_10",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SELSKAP_NAVN_10",
                        "type": "nvarchar"
                    },
                    {
                        "name": "GYLDIG_FRA_DATO",
                        "type": "date"
                    },
                    {
                        "name": "GYLDIG_TIL_DATO",
                        "type": "date"
                    },
                    {
                        "name": "GYLDIG_FLAGG",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_ENDRING_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "D_SELSKAP"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/B_KONTO_OPPSTILLING')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "4 Bridge"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "FK_KONTO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_KONTO_OPPSTILLING_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_GYLDIG_FRA_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "B_KONTO_OPPSTILLING"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_24SO_COMPANY')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1 Raw"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ClientName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "AccountId",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AccountNo",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AccountName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "AccountTax",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "TaxNo",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "RAW_24SO_Company"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ST_24SO_ACCOUNT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "2 Stage"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CLIENT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ACCOUNT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ACCOUNT_NO",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ACCOUNT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ACCOUNT_TAX",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "TAX_NO",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "ST_24SO_ACCOUNT"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BLOB_MAN_CHURN')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference",
                    "parameters": {}
                },
                "folder": {
                    "name": "0 Blob"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "MAN_CHURN.csv",
                        "container": "data-factory-manual-input"
                    },
                    "columnDelimiter": ",",
                    "encodingName": "ISO-8859-1",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "KUNDE_ID",
                        "type": "String"
                    },
                    {
                        "name": "KJOENN",
                        "type": "String"
                    },
                    {
                        "name": "PENSJONIST",
                        "type": "String"
                    },
                    {
                        "name": "PARTNER",
                        "type": "String"
                    },
                    {
                        "name": "FORSOERGER",
                        "type": "String"
                    },
                    {
                        "name": "VARIGHET",
                        "type": "String"
                    },
                    {
                        "name": "TELEFON",
                        "type": "String"
                    },
                    {
                        "name": "INTERNETT",
                        "type": "String"
                    },
                    {
                        "name": "SIKKERHETSPAKKE_NETT",
                        "type": "String"
                    },
                    {
                        "name": "BACKUP",
                        "type": "String"
                    },
                    {
                        "name": "FORSIKRING",
                        "type": "String"
                    },
                    {
                        "name": "SUPPORTAVTALE",
                        "type": "String"
                    },
                    {
                        "name": "STREAMING_TV",
                        "type": "String"
                    },
                    {
                        "name": "STREAMING_FILM",
                        "type": "String"
                    },
                    {
                        "name": "KONTRAKTSTYPE",
                        "type": "String"
                    },
                    {
                        "name": "E_FAKTURA",
                        "type": "String"
                    },
                    {
                        "name": "BETALINGSMETODE",
                        "type": "String"
                    },
                    {
                        "name": "INNBETALING_MAANEDLIG",
                        "type": "String"
                    },
                    {
                        "name": "INNBETALING_TOTALT",
                        "type": "String"
                    },
                    {
                        "name": "CHURN",
                        "type": "String"
                    },
                    {
                        "name": "PREDIKERT_CHURN",
                        "type": "String"
                    },
                    {
                        "name": "CHURNSANNSYNLIGHET",
                        "type": "String"
                    },
                    {
                        "name": "PERIODER_SIDEN_START",
                        "type": "String"
                    },
                    {
                        "name": "DATO",
                        "type": "String"
                    },
                    {
                        "name": "FK_PERIODE_ID",
                        "type": "String"
                    },
                    {
                        "name": "BETALINGSAUTOMATIKK",
                        "type": "String"
                    },
                    {
                        "name": "ANTALL_PRODUKTER",
                        "type": "String"
                    },
                    {
                        "name": "INTERNETTKUNDE",
                        "type": "String"
                    },
                    {
                        "name": "TILTAK",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BLOB_MAN_CHURN_PRODUKT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference",
                    "parameters": {}
                },
                "folder": {
                    "name": "0 Blob"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "MAN_CHURN_PRODUKT.csv",
                        "container": "data-factory-manual-input"
                    },
                    "columnDelimiter": ",",
                    "encodingName": "ISO-8859-1",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "PRODUKT",
                        "type": "String"
                    },
                    {
                        "name": "GJENNOMSNITTLIG_VARIGHET_MND",
                        "type": "String"
                    },
                    {
                        "name": "GJENNOMSNITTLIG_DB_MND",
                        "type": "String"
                    },
                    {
                        "name": "GJENNOMSNITTLIG_CHURN_SANNSYNLIGHET",
                        "type": "String"
                    },
                    {
                        "name": "GJENNOMSNITTLIG_ANTALL_ANDRE_PRODUKTER",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAN_CHURN')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference",
                    "parameters": {}
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "6 Demo"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "KUNDE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KJOENN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PENSJONIST",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PARTNER",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FORSOERGER",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VARIGHET",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "TELEFON",
                        "type": "nvarchar"
                    },
                    {
                        "name": "INTERNETT",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SIKKERHETSPAKKE_NETT",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BACKUP",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FORSIKRING",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SUPPORTAVTALE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "STREAMING_TV",
                        "type": "nvarchar"
                    },
                    {
                        "name": "STREAMING_FILM",
                        "type": "nvarchar"
                    },
                    {
                        "name": "KONTRAKTSTYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "E_FAKTURA",
                        "type": "nvarchar"
                    },
                    {
                        "name": "BETALINGSMETODE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "INNBETALING_MAANEDLIG",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "INNBETALING_TOTALT",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "CHURN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PREDIKERT_CHURN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CHURNSANNSYNLIGHET",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 4
                    },
                    {
                        "name": "PERIODER_SIDEN_START",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DATO",
                        "type": "date"
                    },
                    {
                        "name": "FK_PERIODE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BETALINGSAUTOMATIKK",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ANTALL_PRODUKTER",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "INTERNETTKUNDE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "TILTAK",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "MAN_CHURN"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAN_CHURN_PRODUKT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference",
                    "parameters": {}
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "6 Demo"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "PRODUKT",
                        "type": "nvarchar"
                    },
                    {
                        "name": "GJENNOMSNITTLIG_VARIGHET_MND",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "GJENNOMSNITTLIG_DB_MND",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "GJENNOMSNITTLIG_CHURN_SANNSYNLIGHET",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "GJENNOMSNITTLIG_ANTALL_ANDRE_PRODUKTER",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "MAN_CHURN_PRODUKT"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DEMO_COPY_MAN_CHURN')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CopyFromBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.tableSchema, '.', pipeline().parameters.tableName)}",
                                    "type": "Expression"
                                },
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "BLOB_MAN_CHURN",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "MAN_CHURN",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableSchema": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    },
                    "tableName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "6 Demo/Demo Data"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BLOB_MAN_CHURN')]",
                "[concat(variables('factoryId'), '/datasets/MAN_CHURN')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DEMO_COPY_MAN_CHURN_PRODUKT')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CopyFromBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.tableSchema, '.', pipeline().parameters.tableName)}",
                                    "type": "Expression"
                                },
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "BLOB_MAN_CHURN_PRODUKT",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "MAN_CHURN_PRODUKT",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableSchema": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    },
                    "tableName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "6 Demo/Demo Data"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/BLOB_MAN_CHURN_PRODUKT')]",
                "[concat(variables('factoryId'), '/datasets/MAN_CHURN_PRODUKT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_24SO_DEPARTMENT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1 Raw"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ClientName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Id",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Name",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoicePostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoicePostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceCountry",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "RAW_24SO_DEPARTMENT"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ST_24SO_TRANSACTION')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "2 Stage"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CLIENT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DATE",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "ACCOUNT_NO",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CURRENCY",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CURRENCY_RATE",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "CURRENCY_UNIT",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AMOUNT",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "STAMP_NO",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "PERIOD",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "TRANSACTION_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "COMMENT",
                        "type": "nvarchar"
                    },
                    {
                        "name": "TRANSACTION_NO",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "VAT_CODE",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "LINK_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "INVOICE_NO",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SEQUENCE_NO",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SYSTEM_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DUE_DATE",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "PROJECT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PROJECT_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "PROJECT_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PROJECT_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DEPARTMENT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DEPARTMENT_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DEPARTMENT_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "DEPARTMENT_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "EMPLOYEE_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EMPLOYEE_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EMPLOYEE_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "EMPLOYEE_TYPE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PRODUCT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PRODUCT_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PRODUCT_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "PRODUCT_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CUSTOMER_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CUSTOMER_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CUSTOMER_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "CUSTOMER_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CUSTOMER_ORDER_SLIP_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CUSTOMER_ORDER_SLIP_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CUSTOMER_ORDER_SLIP_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "CUSTOMER_ORDER_SLIP_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "SUPPLIER_ORDER_SLIP_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SUPPLIER_ORDER_SLIP_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SUPPLIER_ORDER_SLIP_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "SUPPLIER_ORDER_SLIP_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "REGISTRATION_DATE",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "DATE_CHANGED",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "HIDDEN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "OPEN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "OCR",
                        "type": "nvarchar"
                    },
                    {
                        "name": "HAS_VAT_DIVIDEND",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "ST_24SO_Transaction"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ST_24SO_COMPANY')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2 Stage"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ClientName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Id",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ExternalId",
                        "type": "nvarchar"
                    },
                    {
                        "name": "OrganizationNumber",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Name",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FirstName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "NickName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoicePostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoicePostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberHomeDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberHomeValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberFaxDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberFaxValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberMobileDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberMobileValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberPrimaryDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberPrimaryValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberWorkDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PhoneNumberWorkValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressHomeDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressHomeName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressHomeValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressInvoiceDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressInvoiceName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressInvoiceValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressPrimaryDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressPrimaryName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressPrimaryValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressWorkDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressWorkName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressWorkValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressAlternativeDescription",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressAlternativeName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EmailAddressAlternativeValue",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Url",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Country",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Note",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceLanguage",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Type",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Username",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Password",
                        "type": "nvarchar"
                    },
                    {
                        "name": "IncorporationDate",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "DateCreated",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "Status",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "PriceList",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Owner",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "BankAccountNo",
                        "type": "nvarchar"
                    },
                    {
                        "name": "TermsOfDeliveryId",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AccountDebit",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AccountCredit",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Discount",
                        "type": "float",
                        "precision": 15
                    },
                    {
                        "name": "TypeGroup",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ShareCapital",
                        "type": "float",
                        "precision": 15
                    },
                    {
                        "name": "NumberOfEmployees",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Turnover",
                        "type": "float",
                        "precision": 15
                    },
                    {
                        "name": "Profit",
                        "type": "float",
                        "precision": 15
                    },
                    {
                        "name": "IndustryId",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MemberNo",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DateChanged",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "BlockInvoice",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DistributionMethod",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CurrencyId",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PaymentTime",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "GlnNumber",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Factoring",
                        "type": "nvarchar"
                    },
                    {
                        "name": "LedgerCustomerAccount",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "LedgerSupplierAccount",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "VatNumber",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Private",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FKLasteloggInsertID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FKLasteloggUpdateID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JobbInsertNavn",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JobbUpdateNavn",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RadInsertTS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RadUpdateTS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "24SO_Company_ST"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_24SO_TRANSACTION')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1 Raw"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CLIENT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DATE",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "ACCOUNT_NO",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CURRENCY",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CURRENCY_RATE",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "CURRENCY_UNIT",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AMOUNT",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "STAMP_NO",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "PERIOD",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "TRANSACTION_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "COMMENT",
                        "type": "nvarchar"
                    },
                    {
                        "name": "TRANSACTION_NO",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "VAT_CODE",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "LINK_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "INVOICE_NO",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SEQUENCE_NO",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SYSTEM_TYPE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DUE_DATE",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "PROJECT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PROJECT_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "PROJECT_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PROJECT_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DEPARTMENT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DEPARTMENT_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DEPARTMENT_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "DEPARTMENT_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "EMPLOYEE_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EMPLOYEE_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "EMPLOYEE_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "EMPLOYEE_TYPE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PRODUCT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PRODUCT_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PRODUCT_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "PRODUCT_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CUSTOMER_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CUSTOMER_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CUSTOMER_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "CUSTOMER_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CUSTOMER_ORDER_SLIP_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CUSTOMER_ORDER_SLIP_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "CUSTOMER_ORDER_SLIP_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "CUSTOMER_ORDER_SLIP_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "SUPPLIER_ORDER_SLIP_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SUPPLIER_ORDER_SLIP_VALUE",
                        "type": "nvarchar"
                    },
                    {
                        "name": "SUPPLIER_ORDER_SLIP_PERCENT",
                        "type": "decimal",
                        "precision": 5,
                        "scale": 2
                    },
                    {
                        "name": "SUPPLIER_ORDER_SLIP_TYPE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "REGISTRATION_DATE",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "DATE_CHANGED",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "HIDDEN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "OPEN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "OCR",
                        "type": "nvarchar"
                    },
                    {
                        "name": "HAS_VAT_DIVIDEND",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "RAW_24SO_TRANSACTION"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RAW_24SO_ACCOUNT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "1 Raw"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "CLIENT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ACCOUNT_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ACCOUNT_NO",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "ACCOUNT_NAME",
                        "type": "nvarchar"
                    },
                    {
                        "name": "ACCOUNT_TAX",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "TAX_NO",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "RAW_24SO_Account"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAN_DATO')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0 Blob"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "MAN_DATO.csv",
                        "container": "data-factory-manual-input"
                    },
                    "columnDelimiter": ";",
                    "encodingName": "ISO-8859-1",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "dato_id",
                        "type": "String"
                    },
                    {
                        "name": "dato",
                        "type": "String"
                    },
                    {
                        "name": "dag_i_uke",
                        "type": "String"
                    },
                    {
                        "name": "dag_nummer_i_maaned",
                        "type": "String"
                    },
                    {
                        "name": "dag_nummer_total",
                        "type": "String"
                    },
                    {
                        "name": "dag_navn",
                        "type": "String"
                    },
                    {
                        "name": "dag_navn_kort",
                        "type": "String"
                    },
                    {
                        "name": "ukedag_flagg",
                        "type": "String"
                    },
                    {
                        "name": "uke_nummer_i_aar",
                        "type": "String"
                    },
                    {
                        "name": "uke_nummer_total",
                        "type": "String"
                    },
                    {
                        "name": "foerste_dato_uke",
                        "type": "String"
                    },
                    {
                        "name": "foerste_dato_uke_id",
                        "type": "String"
                    },
                    {
                        "name": "maaned",
                        "type": "String"
                    },
                    {
                        "name": "maaned_nummer_total",
                        "type": "String"
                    },
                    {
                        "name": "maaned_navn",
                        "type": "String"
                    },
                    {
                        "name": "maaned_navn_kort",
                        "type": "String"
                    },
                    {
                        "name": "kvartal",
                        "type": "String"
                    },
                    {
                        "name": "aar",
                        "type": "String"
                    },
                    {
                        "name": "aar_maaned",
                        "type": "String"
                    },
                    {
                        "name": "fiskal_maaned",
                        "type": "String"
                    },
                    {
                        "name": "fiskal_kvartal",
                        "type": "String"
                    },
                    {
                        "name": "fiskal_aar",
                        "type": "String"
                    },
                    {
                        "name": "maaned_slutt_flagg",
                        "type": "String"
                    },
                    {
                        "name": "dato_forrige_aar",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ST_DATO')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "2 Stage"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "DATO_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DATO",
                        "type": "date"
                    },
                    {
                        "name": "DAG_I_UKE",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DAG_NUMMER_I_MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DAG_NUMMER_TOTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DAG_NAVN",
                        "type": "varchar"
                    },
                    {
                        "name": "DAG_NAVN_KORT",
                        "type": "varchar"
                    },
                    {
                        "name": "UKEDAG_FLAGG",
                        "type": "bit"
                    },
                    {
                        "name": "UKE_NUMMER_I_AAR",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "UKE_NUMMER_TOTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FOERSTE_DATO_UKE",
                        "type": "date"
                    },
                    {
                        "name": "FOERSTE_DATO_UKE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED_NUMMER_TOTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED_NAVN",
                        "type": "varchar"
                    },
                    {
                        "name": "MAANED_NAVN_KORT",
                        "type": "varchar"
                    },
                    {
                        "name": "KVARTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AAR",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "AAR_MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FISKAL_MAANED",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FISKAL_KVARTAL",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FISKAL_AAR",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MAANED_SLUTT_FLAGG",
                        "type": "bit"
                    },
                    {
                        "name": "DATO_FORRIGE_AAR",
                        "type": "date"
                    },
                    {
                        "name": "FK_LASTELOGG_INSERT_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "FK_LASTELOGG_UPDATE_ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_INSERT_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "JOBB_UPDATE_NAVN",
                        "type": "nvarchar"
                    },
                    {
                        "name": "RAD_INSERT_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    },
                    {
                        "name": "RAD_UPDATE_TS",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "ST_DATO"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ST_24SO_DEPARTMENT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "2 Stage"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "ClientName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Id",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Name",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "PostCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "DeliveryCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitPostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitPostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "VisitCountry",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceStreet",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceState",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoicePostalCode",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoicePostalArea",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceName",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceCity",
                        "type": "nvarchar"
                    },
                    {
                        "name": "InvoiceCountry",
                        "type": "nvarchar"
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "24SO_Department_ST"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BLOB_MAN_KUNDEFORDRINGER')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "6 Demo"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "MAN_KUNDEFORDRINGER.csv",
                        "container": "data-factory-manual-input"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "nullValue": "null",
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "Antall dager sen",
                        "type": "String"
                    },
                    {
                        "name": "Betalingsfrist",
                        "type": "String"
                    },
                    {
                        "name": "Betalt dato",
                        "type": "String"
                    },
                    {
                        "name": "Dager til betalt",
                        "type": "String"
                    },
                    {
                        "name": "Elektronisk",
                        "type": "String"
                    },
                    {
                        "name": "Fakturabeløp",
                        "type": "String"
                    },
                    {
                        "name": "Fakturadato",
                        "type": "String"
                    },
                    {
                        "name": "Fakturanummer",
                        "type": "String"
                    },
                    {
                        "name": "Forventet innbetalt",
                        "type": "String"
                    },
                    {
                        "name": "Klage",
                        "type": "String"
                    },
                    {
                        "name": "Kunde ID",
                        "type": "String"
                    },
                    {
                        "name": "Landkode",
                        "type": "String"
                    },
                    {
                        "name": "Type",
                        "type": "String"
                    },
                    {
                        "name": "FK_PERIODE_ID",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAN_24SO_TRANSACTION')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "6 Demo"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "MAN_24SO_TRANSACTION.csv",
                        "container": "data-factory-manual-input"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "ClientName",
                        "type": "String"
                    },
                    {
                        "name": "AccountNo",
                        "type": "String"
                    },
                    {
                        "name": "Date",
                        "type": "String"
                    },
                    {
                        "name": "Period",
                        "type": "String"
                    },
                    {
                        "name": "Amount",
                        "type": "String"
                    },
                    {
                        "name": "DimensionCustomerValue",
                        "type": "String"
                    },
                    {
                        "name": "DimensionProjectValue",
                        "type": "String"
                    },
                    {
                        "name": "DimensionDepartmentValue",
                        "type": "String"
                    },
                    {
                        "name": "DimensionEmployeeValue",
                        "type": "String"
                    },
                    {
                        "name": "DimensionProductValue",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAN_24SO_ACCOUNT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "6 Demo"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "MAN_24SO_ACCOUNT.csv",
                        "container": "data-factory-manual-input"
                    },
                    "columnDelimiter": ",",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    },
                    {
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BLOB_24SO_ACCOUNT')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0 Blob"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "24SO_Account.csv",
                        "container": "functions"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAN_KONTO_OPPSTILLING')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0 Blob"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "MAN_KONTO_OPPSTILLING.csv",
                        "container": "data-factory-manual-input"
                    },
                    "columnDelimiter": ";",
                    "encodingName": "ISO-8859-1",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "PK_KONTO_OPPSTILLING_ID",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_OPPSTILLING_KODE",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_OPPSTILLING_NAVN",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_OPPSTILLING_KODE_NAVN",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_SUM_FLAGG",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_TYPE",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE",
                        "type": "String"
                    },
                    {
                        "name": "MOR_KONTO_KODE",
                        "type": "String"
                    },
                    {
                        "name": "MOR_KONTO_NAVN",
                        "type": "String"
                    },
                    {
                        "name": "MOR_KONTO_KODE_NAVN",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/BLOB_24SO_TRANSACTION')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0 Blob"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "24SO_Transaction.csv",
                        "container": "functions"
                    },
                    "columnDelimiter": "|",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAN_KONTO_GRUPPE')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_blob_storage",
                    "type": "LinkedServiceReference"
                },
                "folder": {
                    "name": "0 Blob"
                },
                "annotations": [],
                "type": "DelimitedText",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": "MAN_KONTO_GRUPPE.csv",
                        "container": "data-factory-manual-input"
                    },
                    "columnDelimiter": ";",
                    "encodingName": "ISO-8859-1",
                    "escapeChar": "\\",
                    "firstRowAsHeader": true,
                    "quoteChar": "\""
                },
                "schema": [
                    {
                        "name": "PK_KONTO_GRUPPE_ID",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_1",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_1",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_NAVN_1",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_2",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_2",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_NAVN_2",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_3",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_3",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_NAVN_3",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_4",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_NAVN_4",
                        "type": "String"
                    },
                    {
                        "name": "KONTO_GRUPPE_KODE_NAVN_4",
                        "type": "String"
                    }
                ]
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_blob_storage')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MAN_KUNDEFORDRINGER')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "azure_sql_server",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "6 Demo"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [
                    {
                        "name": "FK_PERIODE_ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Type",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Antall dager sen",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Betalingsfrist",
                        "type": "date"
                    },
                    {
                        "name": "Betalt dato",
                        "type": "date"
                    },
                    {
                        "name": "Dager til betalt",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Elektronisk",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Fakturabeløp",
                        "type": "decimal",
                        "precision": 13,
                        "scale": 4
                    },
                    {
                        "name": "Fakturadato",
                        "type": "date"
                    },
                    {
                        "name": "Fakturanummer",
                        "type": "bigint",
                        "precision": 19
                    },
                    {
                        "name": "Forventet innbetalt",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Klage",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Kunde ID",
                        "type": "nvarchar"
                    },
                    {
                        "name": "Landkode",
                        "type": "int",
                        "precision": 10
                    }
                ],
                "typeProperties": {
                    "schema": {
                        "value": "@dataset().tableSchema",
                        "type": "Expression"
                    },
                    "table": "MAN_KUNDEFORDRINGER"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_D_DATO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "D_DATO",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "TR_D_DATO",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "JOB_NAME": "'TR_D_DATO'",
                                    "LASTELOGG": "'@{pipeline().RunId}'"
                                },
                                "datasetParameters": {
                                    "SourceManDatoST": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaManDato",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkDDato": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaDDato",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkDPeriode": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaDPeriode",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableSchemaManDato": {
                        "type": "string"
                    },
                    "tableSchemaDDato": {
                        "type": "string"
                    },
                    "tableSchemaDPeriode": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "4 Core"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/TR_D_DATO')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_24SO_TRANSACTION_ST')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "TR_24SO_Transaction_ST",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "TR_ST_24SO_TRANSACTION",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "JOB_NAME": "'TR_24SO_Transaction_ST'",
                                    "LASTE_LOGG": "'@{pipeline().RunId}'"
                                },
                                "datasetParameters": {
                                    "SourceRAW24SOTranscaction": {},
                                    "SinkST24SOTransaction": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchema",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "1 Stage"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/TR_ST_24SO_TRANSACTION')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_24SO_ACCOUNT_ST')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "TR_24SO_Account_ST",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "TR_ST_24SO_ACCOUNT",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "JOB_NAME": "'TR_24SO_Account_ST'",
                                    "LASTE_LOGG": "'@{pipeline().RunId}'"
                                },
                                "datasetParameters": {
                                    "Source24SOAccountRW": {},
                                    "Sink24SOAccountST": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchema",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "1 Stage"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/TR_ST_24SO_ACCOUNT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_B_KONTO_GRUPPE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "createOrAlterView",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "viewName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[createOrAlterView]",
                            "storedProcedureParameters": {
                                "tableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewColumns": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewColumns",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewName": {
                                    "value": {
                                        "value": "@variables('viewName')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_sql_server",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "viewName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "viewName",
                            "value": {
                                "value": "@{concat('V_', pipeline().parameters.tableName)}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableName": {
                        "type": "string",
                        "defaultValue": "B_KONTO_GRUPPE"
                    },
                    "tableSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewColumns": {
                        "type": "string",
                        "defaultValue": "FK_KONTO_GRUPPE_ID, FK_KONTO_ID"
                    }
                },
                "variables": {
                    "viewName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "3 Bridge"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LOAD_FROM_24SO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy 24SO Transaction to Blob",
                        "type": "AzureFunctionActivity",
                        "dependsOn": [
                            {
                                "activity": "Get SQL DB Password",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get 24SO API Key",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get 24SO API Password",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 1,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "functionName": {
                                "value": "@pipeline().parameters.transactionFunctionName",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "API_UID": "@{pipeline().parameters.API_UID}",
                                "API_PWD": "@{activity('Get 24SO API Password').output.value}",
                                "API_KEY": "@{activity('Get 24SO API Key').output.value}",
                                "SEARCH_START_DATE": "@{pipeline().parameters.SEARCH_START_DATE}",
                                "SEARCH_END_DATE": "@{pipeline().parameters.SEARCH_END_DATE}",
                                "SQL_SERVER_NAME":"@{pipeline().parameters.SQL_SERVER_NAME}",
                                "SQL_DB_NAME":"@{pipeline().parameters.SQL_DB_NAME}",
                                "SQL_DB_UID":"@{pipeline().parameters.SQL_DB_UID}",
                                "SQL_DB_PWD":"@{activity('Get SQL DB Password').output.value}"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_function",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "Get SQL DB Password",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "@{concat(pipeline().parameters.sqlDbPasswordUrl, '?api-version=7.0')}",
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get 24SO API Key",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "@{concat(pipeline().parameters.apiKeySecretUrl, '?api-version=7.0')}",
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Get 24SO API Password",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "@{concat(pipeline().parameters.apiPwdSecretUrl, '?api-version=7.0')}",
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "Copy 24SO Account to Blob",
                        "type": "AzureFunctionActivity",
                        "dependsOn": [
                            {
                                "activity": "Get SQL DB Password",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get 24SO API Key",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Get 24SO API Password",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "functionName": {
                                "value": "@pipeline().parameters.accountFunctionName",
                                "type": "Expression"
                            },
                            "method": "POST",
                            "headers": {},
                            "body": {
                                "API_UID": "@{pipeline().parameters.API_UID}",
                                "API_PWD": "@{activity('Get 24SO API Password').output.value}",
                                "API_KEY": "@{activity('Get 24SO API Key').output.value}",
                                "SQL_SERVER_NAME":"@{pipeline().parameters.SQL_SERVER_NAME}",
                                "SQL_DB_NAME":"@{pipeline().parameters.SQL_DB_NAME}",
                                "SQL_DB_UID":"@{pipeline().parameters.SQL_DB_UID}",
                                "SQL_DB_PWD":"@{activity('Get SQL DB Password').output.value}"
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_function",
                            "type": "LinkedServiceReference"
                        }
                    }
                ],
                "parameters": {
                    "API_UID": {
                        "type": "string",
                        "defaultValue": "oystein.hellenes.grov@pwc.com"
                    },
                    "SEARCH_START_DATE": {
                        "type": "string",
                        "defaultValue": "1900-01-01"
                    },
                    "SEARCH_END_DATE": {
                        "type": "string",
                        "defaultValue": "2021-01-31"
                    },
                    "SQL_SERVER_NAME": {
                        "type": "string",
                        "defaultValue": "[parameters('sqlServerName')]"
                    },
                    "SQL_DB_NAME": {
                        "type": "string",
                        "defaultValue": "[parameters('sqlDbName')]"
                    },
                    "SQL_DB_UID": {
                        "type": "string",
                        "defaultValue": "[parameters('sqlDbUid')]"
                    },
                    "transactionTableName": {
                        "type": "string",
                        "defaultValue": "RAW_24SO_TRANSACTION"
                    },
                    "accountTableName": {
                        "type": "string",
                        "defaultValue": "RAW_24SO_ACCOUNT"
                    },
                    "accountFunctionName": {
                        "type": "string",
                        "defaultValue": "get_account_list"
                    },
                    "transactionFunctionName": {
                        "type": "string",
                        "defaultValue": "get_transactions"
                    },
                    "transactionTableSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "accountTableSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "apiKeySecretUrl": {
                        "type": "string",
                        "defaultValue": "[parameters('apiKey24SoUri')]"
                    },
                    "apiPwdSecretUrl": {
                        "type": "string",
                        "defaultValue": "[parameters('apiPwd24SoUri')]"
                    },
                    "sqlDbPasswordUrl": {
                        "type": "string",
                        "defaultValue": "[parameters('sqlDbPwdUri')]"
                    }
                },
                "folder": {
                    "name": "0 Raw"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_function')]",
                "[concat(variables('factoryId'), '/datasets/BLOB_24SO_TRANSACTION')]",
                "[concat(variables('factoryId'), '/datasets/RAW_24SO_TRANSACTION')]",
                "[concat(variables('factoryId'), '/datasets/BLOB_24SO_ACCOUNT')]",
                "[concat(variables('factoryId'), '/datasets/RAW_24SO_ACCOUNT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_MAN_DATO_ST')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Orc Man Dato ST",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "TR_ST_MAN_DATO",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "JOB_NAME": "'TR_Man_Dato_ST'",
                                    "LASTE_LOGG": "'@{pipeline().RunId}'"
                                },
                                "datasetParameters": {
                                    "SourceManDatoRW": {},
                                    "SinkManDatoST": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchema",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "1 Stage"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/TR_ST_MAN_DATO')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_B_KONTO_OPPSTILLING')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "createOrAlterView",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "viewName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[createOrAlterView]",
                            "storedProcedureParameters": {
                                "tableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewColumns": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewColumns",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewName": {
                                    "value": {
                                        "value": "@variables('viewName')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_sql_server",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "viewName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "viewName",
                            "value": {
                                "value": "@{concat('V_', pipeline().parameters.tableName)}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableName": {
                        "type": "string",
                        "defaultValue": "B_KONTO_OPPSTILLING"
                    },
                    "tableSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewColumns": {
                        "type": "string",
                        "defaultValue": "FK_KONTO_ID, FK_KONTO_OPPSTILLING_ID"
                    }
                },
                "variables": {
                    "viewName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "3 Bridge"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_F_OKONOMI')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "F_OKONOMI",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "TR_F_OKONOMI",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "JOB_NAME": "'TR_F_OKONOMI'",
                                    "LASTELOGG": "'@{pipeline().RunId}'"
                                },
                                "datasetParameters": {
                                    "Source24SOTransactionST": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaST24SOTransaction",
                                            "type": "Expression"
                                        }
                                    },
                                    "SourceDKonto": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaDKonto",
                                            "type": "Expression"
                                        }
                                    },
                                    "SourceDPeriode": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaDPeriode",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkFOkonomi": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaFOkonomi",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            }
                        }
                    },
                    {
                        "name": "createOrAlterView",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "F_OKONOMI",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "viewName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[createOrAlterView]",
                            "storedProcedureParameters": {
                                "tableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewColumns": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewColumns",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewName": {
                                    "value": {
                                        "value": "@variables('viewName')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_sql_server",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "viewName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "viewName",
                            "value": {
                                "value": "@{concat('V_', pipeline().parameters.tableName)}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableName": {
                        "type": "string",
                        "defaultValue": "F_OKONOMI"
                    },
                    "tableSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewColumns": {
                        "type": "string",
                        "defaultValue": "BELOP, FK_KONTO_ID, FK_ORGANISASJON_ID, FK_PERIODE_ID, FK_SCENARIO_ID, FK_SELSKAP_ID, FK_TJENESTE_ID"
                    },
                    "tableSchemaST24SOTransaction": {
                        "type": "string"
                    },
                    "tableSchemaDKonto": {
                        "type": "string"
                    },
                    "tableSchemaDPeriode": {
                        "type": "string"
                    },
                    "tableSchemaFOkonomi": {
                        "type": "string"
                    }
                },
                "variables": {
                    "viewName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "4 Core"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/TR_F_OKONOMI')]",
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_FACT')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "OrcFOkonomi",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_F_OKONOMI",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableName": "F_OKONOMI",
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewColumns": "BELOP, FK_KONTO_ID, FK_ORGANISASJON_ID, FK_PERIODE_ID, FK_SCENARIO_ID, FK_SELSKAP_ID, FK_TJENESTE_ID",
                                "tableSchemaST24SOTransaction": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaDKonto": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaDPeriode": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaFOkonomi": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "schema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "5 Trigger Orchestration/Subcomponents"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ORC_F_OKONOMI')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_DIM_VIEW')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "OrcBKontoGruppe",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_B_KONTO_GRUPPE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableName": "B_KONTO_GRUPPE",
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewColumns": "FK_KONTO_GRUPPE_ID, FK_KONTO_ID"
                            }
                        }
                    },
                    {
                        "name": "OrcBKontoOppstilling",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_B_KONTO_OPPSTILLING",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableName": "B_KONTO_OPPSTILLING",
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewColumns": "FK_KONTO_ID, FK_KONTO_OPPSTILLING_ID"
                            }
                        }
                    },
                    {
                        "name": "OrcDPeriode",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORD_D_PERIODE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableName": "D_PERIODE",
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewColumns": "FOERSTE_DATO_MAANED, KVARTAL, MAANED, MAANED_NAVN, MAANED_NAVN_KORT, D_PERIODE_ID AS PK_PERIODE_ID, REGNSK_AAR AS AAR"
                            }
                        }
                    },
                    {
                        "name": "OrcGRLKontoGruppe",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_GRL_KONTO_GRUPPE",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableName": "GRL_KONTO_GRUPPE",
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewColumns": "PK_KONTO_GRUPPE_ID,KONTO_GRUPPE_KODE_1, KONTO_GRUPPE_NAVN_1, concat(KONTO_GRUPPE_KODE_1, ' - ', KONTO_GRUPPE_NAVN_1) AS KONTO_GRUPPE_KODE_NAVN_1,KONTO_GRUPPE_KODE_2, KONTO_GRUPPE_NAVN_2, concat(KONTO_GRUPPE_KODE_2, ' - ', KONTO_GRUPPE_NAVN_2) AS KONTO_GRUPPE_KODE_NAVN_2,KONTO_GRUPPE_KODE_3, KONTO_GRUPPE_NAVN_3, concat(KONTO_GRUPPE_KODE_3, ' - ', KONTO_GRUPPE_NAVN_3) AS KONTO_GRUPPE_KODE_NAVN_3,KONTO_GRUPPE_KODE_4, KONTO_GRUPPE_NAVN_4, concat(KONTO_GRUPPE_KODE_4, ' - ', KONTO_GRUPPE_NAVN_4) AS KONTO_GRUPPE_KODE_NAVN_4"
                            }
                        }
                    }
                ],
                "parameters": {
                    "schema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "5 Trigger Orchestration/Subcomponents"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ORC_B_KONTO_GRUPPE')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_B_KONTO_OPPSTILLING')]",
                "[concat(variables('factoryId'), '/pipelines/ORD_D_PERIODE')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_GRL_KONTO_GRUPPE')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_ST')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "OrcManDatoST",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_MAN_DATO_ST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CopyToGRLKontoOppstilling",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "COPY_GRL_KONTO_OPPSTILLING",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableName": "GRL_KONTO_OPPSTILLING",
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewColumns": "KONTO_GRUPPE, KONTO_NIVAA, KONTO_OPPSTILLING_KODE, KONTO_OPPSTILLING_NAVN, concat(KONTO_OPPSTILLING_KODE, ' - ', KONTO_OPPSTILLING_NAVN) AS KONTO_OPPSTILLING_KODE_NAVN, KONTO_SUM_FLAGG, KONTO_TYPE, MOR_KONTO_KODE, PK_KONTO_OPPSTILLING_ID"
                            }
                        }
                    },
                    {
                        "name": "LoadFrom24SO",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "LOAD_FROM_24SO",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "UID": "oystein.hellenes.grov@pwc.com",
                                "START_DATE": "1900-01-01",
                                "END_DATE": "2021-02-01",
                                "BLOB_ACCOUNT_NAME": "findemostorage1",
                                "transactionTableName": "RAW_24SO_TRANSACTION",
                                "accountTableName": "RAW_24SO_ACCOUNT",
                                "accountFunctionName": "get_account_list",
                                "transactionFunctionName": "get_transactions",
                                "transactionTableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "accountTableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Orc24SOAccountST",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "LoadFrom24SO",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_24SO_ACCOUNT_ST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Orc24SOTransactionST",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "LoadFrom24SO",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_24SO_TRANSACTION_ST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "schema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "5 Trigger Orchestration/Subcomponents"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ORC_MAN_DATO_ST')]",
                "[concat(variables('factoryId'), '/pipelines/COPY_GRL_KONTO_OPPSTILLING')]",
                "[concat(variables('factoryId'), '/pipelines/LOAD_FROM_24SO')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_24SO_ACCOUNT_ST')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_24SO_TRANSACTION_ST')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_DIM')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "OrcDKonto",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_D_KONTO",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableName": "D_KONTO",
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewColumns": "KONTO_BESKR, KONTO_KODE, KONTO_NAVN, KONTO_TYPE, PK_KONTO_ID",
                                "tableSchemaST24SOAccount": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaGRLKontoOppstilling": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaDKonto": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaBKontoOppstilling": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaGRLKontoGruppe": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaBKontoGruppe": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "OrcDDato",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_D_DATO",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchemaManDato": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaDDato": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableSchemaDPeriode": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "schema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "5 Trigger Orchestration/Subcomponents"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ORC_D_KONTO')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_D_DATO')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_FULL_REFRESH')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "OrcST",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_ST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "schema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "OrcDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "OrcST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_DIM",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "schema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "OrcFact",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "OrcDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_FACT",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "schema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "OrcDimView",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "OrcDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_DIM_VIEW",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "schema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "parameters": {
                    "schema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    }
                },
                "folder": {
                    "name": "5 Trigger Orchestration"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ORC_ST')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_DIM')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_FACT')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_DIM_VIEW')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_GRL_KONTO_GRUPPE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "createOrAlterView",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "viewName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[createOrAlterView]",
                            "storedProcedureParameters": {
                                "tableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewColumns": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewColumns",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewName": {
                                    "value": {
                                        "value": "@variables('viewName')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_sql_server",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "viewName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "viewName",
                            "value": {
                                "value": "@{concat('V_', pipeline().parameters.tableName)}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableName": {
                        "type": "string",
                        "defaultValue": "GRL_KONTO_GRUPPE"
                    },
                    "tableSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewColumns": {
                        "type": "string",
                        "defaultValue": "PK_KONTO_GRUPPE_ID,KONTO_GRUPPE_KODE_1, KONTO_GRUPPE_NAVN_1, concat(KONTO_GRUPPE_KODE_1, ' - ', KONTO_GRUPPE_NAVN_1) AS KONTO_GRUPPE_KODE_NAVN_1,KONTO_GRUPPE_KODE_2, KONTO_GRUPPE_NAVN_2, concat(KONTO_GRUPPE_KODE_2, ' - ', KONTO_GRUPPE_NAVN_2) AS KONTO_GRUPPE_KODE_NAVN_2,KONTO_GRUPPE_KODE_3, KONTO_GRUPPE_NAVN_3, concat(KONTO_GRUPPE_KODE_3, ' - ', KONTO_GRUPPE_NAVN_3) AS KONTO_GRUPPE_KODE_NAVN_3,KONTO_GRUPPE_KODE_4, KONTO_GRUPPE_NAVN_4, concat(KONTO_GRUPPE_KODE_4, ' - ', KONTO_GRUPPE_NAVN_4) AS KONTO_GRUPPE_KODE_NAVN_4"
                    }
                },
                "variables": {
                    "viewName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "2 Grunnlag"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DEMO_COPY_24SO_ACCOUNT_ST')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CopyFromBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.tableSchema, '.', pipeline().parameters.tableName)}",
                                    "type": "Expression"
                                },
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "MAN_24SO_ACCOUNT",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ST_24SO_ACCOUNT",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableSchema": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    },
                    "tableName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "6 Demo/Demo Data"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/MAN_24SO_ACCOUNT')]",
                "[concat(variables('factoryId'), '/datasets/ST_24SO_ACCOUNT')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DEMO_ORC_MAN_INPUT_KUNDEFORDRINGER')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "ManInputKundefordringer",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "TR_MAN_KUNDEFORDRINGER",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "JOB_NAME": "'TR_MAN_KUNDEFORDRINGER'",
                                    "LASTELOGG": "'@{pipeline().RunId}'"
                                },
                                "datasetParameters": {
                                    "SourceManInputKundefordr": {},
                                    "sink1": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchema",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "6 Demo/Demo Data"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/TR_MAN_KUNDEFORDRINGER')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORD_D_PERIODE')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "createOrAlterView",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "viewName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[createOrAlterView]",
                            "storedProcedureParameters": {
                                "tableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewColumns": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewColumns",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewName": {
                                    "value": {
                                        "value": "@variables('viewName')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_sql_server",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "viewName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "viewName",
                            "value": {
                                "value": "@{concat('V_', pipeline().parameters.tableName)}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableName": {
                        "type": "string",
                        "defaultValue": "D_PERIODE"
                    },
                    "tableSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewColumns": {
                        "type": "string",
                        "defaultValue": "FOERSTE_DATO_MAANED, KVARTAL, MAANED, MAANED_NAVN, MAANED_NAVN_KORT, D_PERIODE_ID AS PK_PERIODE_ID, REGNSK_AAR AS AAR"
                    }
                },
                "variables": {
                    "viewName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "4 Core"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/COPY_GRL_KONTO_OPPSTILLING')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "createOrAlterView",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "viewName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "CopyFromBlob",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[createOrAlterView]",
                            "storedProcedureParameters": {
                                "tableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewColumns": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewColumns",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewName": {
                                    "value": {
                                        "value": "@variables('viewName')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_sql_server",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "viewName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "viewName",
                            "value": {
                                "value": "@{concat('V_', pipeline().parameters.tableName)}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "CopyFromBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.tableSchema, '.', pipeline().parameters.tableName)}",
                                    "type": "Expression"
                                },
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "PK_KONTO_OPPSTILLING_ID",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PK_KONTO_OPPSTILLING_ID",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "KONTO_GRUPPE",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "KONTO_GRUPPE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "KONTO_OPPSTILLING_KODE",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "KONTO_OPPSTILLING_KODE",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "KONTO_OPPSTILLING_NAVN",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "KONTO_OPPSTILLING_NAVN",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "KONTO_TYPE",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "KONTO_TYPE",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MOR_KONTO",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MOR_KONTO_KODE",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "KONTO_NIVAA",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "KONTO_NIVAA",
                                            "type": "Int32"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "KONTO_SUM_FLAGG",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "KONTO_SUM_FLAGG",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "MAN_KONTO_OPPSTILLING",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "GRL_KONTO_OPPSTILLING",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableSchema": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "tableName": {
                        "type": "string",
                        "defaultValue": "GRL_KONTO_OPPSTILLING"
                    },
                    "tableSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewSchema": {
                        "type": "string",
                        "defaultValue": "dbo"
                    },
                    "viewColumns": {
                        "type": "string",
                        "defaultValue": "KONTO_GRUPPE, KONTO_NIVAA, KONTO_OPPSTILLING_KODE, KONTO_OPPSTILLING_NAVN, concat(KONTO_OPPSTILLING_KODE, ' - ', KONTO_OPPSTILLING_NAVN) AS KONTO_OPPSTILLING_KODE_NAVN, KONTO_SUM_FLAGG, KONTO_TYPE, MOR_KONTO_KODE, PK_KONTO_OPPSTILLING_ID"
                    }
                },
                "variables": {
                    "viewName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "2 Grunnlag"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]",
                "[concat(variables('factoryId'), '/datasets/MAN_KONTO_OPPSTILLING')]",
                "[concat(variables('factoryId'), '/datasets/GRL_KONTO_OPPSTILLING')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ORC_D_KONTO')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "D_KONTO",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "TR_D_KONTO",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "JOB_NAME": "'TR_D_KONTO'",
                                    "LASTELOGG": "'@{pipeline().RunId}'"
                                },
                                "datasetParameters": {
                                    "Source24SOAccountST": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaST24SOAccount",
                                            "type": "Expression"
                                        }
                                    },
                                    "SourceGRLKontoOppstilling": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaGRLKontoOppstilling",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkDKonto": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaDKonto",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkBKontoOppstilling": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaBKontoOppstilling",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkGRLKontoGruppe": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaGRLKontoOppstilling",
                                            "type": "Expression"
                                        }
                                    },
                                    "SinkBKontoGruppe": {
                                        "tableSchema": {
                                            "value": "@pipeline().parameters.tableSchemaBKontoGruppe",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            }
                        }
                    },
                    {
                        "name": "createOrAlterView",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "D_KONTO",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "viewName",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[createOrAlterView]",
                            "storedProcedureParameters": {
                                "tableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "tableSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewColumns": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewColumns",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewName": {
                                    "value": {
                                        "value": "@variables('viewName')",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "viewSchema": {
                                    "value": {
                                        "value": "@pipeline().parameters.viewSchema",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "azure_sql_server",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "viewName",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "viewName",
                            "value": {
                                "value": "@{concat('V_', pipeline().parameters.tableName)}",
                                "type": "Expression"
                            }
                        }
                    }
                ],
                "parameters": {
                    "tableName": {
                        "type": "string",
                        "defaultValue": "D_KONTO"
                    },
                    "tableSchema": {
                        "type": "string"
                    },
                    "viewSchema": {
                        "type": "string"
                    },
                    "viewColumns": {
                        "type": "string",
                        "defaultValue": "KONTO_BESKR, KONTO_KODE, KONTO_NAVN, KONTO_TYPE, PK_KONTO_ID"
                    },
                    "tableSchemaST24SOAccount": {
                        "type": "string"
                    },
                    "tableSchemaGRLKontoOppstilling": {
                        "type": "string"
                    },
                    "tableSchemaDKonto": {
                        "type": "string"
                    },
                    "tableSchemaBKontoOppstilling": {
                        "type": "string"
                    },
                    "tableSchemaGRLKontoGruppe": {
                        "type": "string"
                    },
                    "tableSchemaBKontoGruppe": {
                        "type": "string"
                    }
                },
                "variables": {
                    "viewName": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "4 Core"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/TR_D_KONTO')]",
                "[concat(variables('factoryId'), '/linkedServices/azure_sql_server')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DEMO_COPY_24SO_TRANSACTION_ST')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "CopyFromBlob",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": {
                                    "value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.tableSchema, '.', pipeline().parameters.tableName)}",
                                    "type": "Expression"
                                },
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "MAN_24SO_TRANSACTION",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "ST_24SO_TRANSACTION",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tableSchema": {
                                        "value": "@pipeline().parameters.tableSchema",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "parameters": {
                    "tableSchema": {
                        "type": "string"
                    },
                    "tableName": {
                        "type": "string"
                    }
                },
                "folder": {
                    "name": "6 Demo/Demo Data"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/MAN_24SO_TRANSACTION')]",
                "[concat(variables('factoryId'), '/datasets/ST_24SO_TRANSACTION')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DEMO_ORC_FULL_REFRESH')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "OrcDim",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "CopyToGRLKontoOppstilling",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "OrcManDatoST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "DEMO_COPY_24SO_ACCOUNT_ST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "DEMO_COPY_24SO_TRANSACTION_ST",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "DEMO_ORC_MAN_INPUT_KUNDEFORDRINGER",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "DEMO_COPY_MAN_CHURN",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "DEMO_COPY_MAN_CHURN_PRODUKT",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_DIM",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "schema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "OrcFact",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "OrcDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_FACT",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "schema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "OrcView",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "OrcDim",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_DIM_VIEW",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "schema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "DEMO_COPY_24SO_ACCOUNT_ST",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DEMO_COPY_24SO_ACCOUNT_ST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableName": "ST_24SO_ACCOUNT"
                            }
                        }
                    },
                    {
                        "name": "DEMO_COPY_24SO_TRANSACTION_ST",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DEMO_COPY_24SO_TRANSACTION_ST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableName": "ST_24SO_TRANSACTION"
                            }
                        }
                    },
                    {
                        "name": "DEMO_ORC_MAN_INPUT_KUNDEFORDRINGER",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DEMO_ORC_MAN_INPUT_KUNDEFORDRINGER",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {}
                        }
                    },
                    {
                        "name": "OrcManDatoST",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ORC_MAN_DATO_ST",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "CopyToGRLKontoOppstilling",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "COPY_GRL_KONTO_OPPSTILLING",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableName": "GRL_KONTO_OPPSTILLING",
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "viewColumns": "KONTO_GRUPPE, KONTO_NIVAA, KONTO_OPPSTILLING_KODE, KONTO_OPPSTILLING_NAVN, concat(KONTO_OPPSTILLING_KODE, ' - ', KONTO_OPPSTILLING_NAVN) AS KONTO_OPPSTILLING_KODE_NAVN, KONTO_SUM_FLAGG, KONTO_TYPE, MOR_KONTO_KODE, PK_KONTO_OPPSTILLING_ID"
                            }
                        }
                    },
                    {
                        "name": "DEMO_COPY_MAN_CHURN",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DEMO_COPY_MAN_CHURN",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableName": "MAN_CHURN"
                            }
                        }
                    },
                    {
                        "name": "DEMO_COPY_MAN_CHURN_PRODUKT",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "DEMO_COPY_MAN_CHURN_PRODUKT",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "tableSchema": {
                                    "value": "@pipeline().parameters.schema",
                                    "type": "Expression"
                                },
                                "tableName": "MAN_CHURN_PRODUKT"
                            }
                        }
                    }
                ],
                "parameters": {
                    "schema": {
                        "type": "string",
                        "defaultValue": "demo"
                    }
                },
                "folder": {
                    "name": "6 Demo"
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/ORC_DIM')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_FACT')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_DIM_VIEW')]",
                "[concat(variables('factoryId'), '/pipelines/DEMO_COPY_24SO_ACCOUNT_ST')]",
                "[concat(variables('factoryId'), '/pipelines/DEMO_COPY_24SO_TRANSACTION_ST')]",
                "[concat(variables('factoryId'), '/pipelines/DEMO_ORC_MAN_INPUT_KUNDEFORDRINGER')]",
                "[concat(variables('factoryId'), '/pipelines/ORC_MAN_DATO_ST')]",
                "[concat(variables('factoryId'), '/pipelines/COPY_GRL_KONTO_OPPSTILLING')]",
                "[concat(variables('factoryId'), '/pipelines/DEMO_COPY_MAN_CHURN')]",
                "[concat(variables('factoryId'), '/pipelines/DEMO_COPY_MAN_CHURN_PRODUKT')]"
            ]
        }
    ]
}